{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the IBM Maximo Asset Monitor Lab (Version: SaaS) You will learn about Monitor's capabilities to: Connect devices Ingest data from devices Transform data into asset information Be alerted about which assets are not performing normally Create system summary and asset dashboard to view asset condition metrics and related asset operational data Maximo Asset Monitor connects devices, ingests device data, and transforms that data into meaningful insights through visualizations such as time series line and bar charts, tabular reports, and interactive diagrams. Watson IoT Platform and its additional add-on services enable organizations to capture and explore data for devices, equipment and machines, and discover insights that can drive better decision-making. Updated: 2021-02-12","title":"Welcome to the Monitor Labs"},{"location":"#welcome-to-the-ibm-maximo-asset-monitor-labversion-saas","text":"You will learn about Monitor's capabilities to: Connect devices Ingest data from devices Transform data into asset information Be alerted about which assets are not performing normally Create system summary and asset dashboard to view asset condition metrics and related asset operational data Maximo Asset Monitor connects devices, ingests device data, and transforms that data into meaningful insights through visualizations such as time series line and bar charts, tabular reports, and interactive diagrams. Watson IoT Platform and its additional add-on services enable organizations to capture and explore data for devices, equipment and machines, and discover insights that can drive better decision-making. Updated: 2021-02-12","title":"Welcome to the IBM Maximo Asset Monitor Lab(Version: SaaS)"},{"location":"add_imagecard/","text":"Create Image Card In Maximo Asset Monitor, images can add a tremendous amount of value to data visualization when paired with graphs, tables, and value cards. You can display an image on your dashboards. You are also able to place icons which called hotspots on the image cards. These icons are tied to data from individual sensors or an aggregate of all of the sensors on a summary dashboard. Create Image Card with the UI widget Save this image by right clicking then choose Save Image As... Click on the gear icon and choose Manage instance dashboard Click on Image Click on the Image card and upload the image site_map.png from step 1. Title: Site Map Time range: Last 24 hours Click on Edit image Click on the map to create a hotspot Note: if your data has x, y location coordinates you can specify them here Title: Robot Icon: User Color: Blue Click on Datasource and choose the following: Entity_Id, Travel time, Work performed Click Save Click Add Card Save and Close Create Image Card with JSON Using a REST API call, you are able to push an image of your choosing into the Monitor data lake and display this image on your dashboards. Inside of the JSON configuration for the image card, you are able to set alert conditions that change the icon on the hotspot. Here is what you see when you click on one of the hotspots. The image card above displays an occupancy use case. Individual occupancy sensors have been tied to each hot spot to indicate whether seats in a meeting room in the Munich IoT center are occupied. The image above shows a much more complicated image card with hotspots than you will be creating in this Exercise, but this example is something that you could use eventually in the real world. In this Exercise, you will learn how to select a photo for your image card, push your image into the Monitor data lake using a REST API call, and finally display your image card on a dashboard in Monitor. You will need Postman for this section. Please download the application at this link if you have not already: https://www.getpostman.com/ Upload Image to Monitor Datalake Choose Image Choose an image that allows you to use hotspots to tell a meaningful story. For example, choosing a floor plan of a factory floor where you can tie hotspots to assets on the floor would tell an important and meaningful story. Choose an image that is smaller than 1MB . Your API call will not be successful if you try to push a larger file. These are the types of files that you can push into the Monitor data lake. Obtain API Key Open up your Maximo Asset Monitor tenant. Open up the hamburger menu on the left side and select Services . Next to Watson IoT Platform Service , click View Details and then click View More . Copy and paste the API Key and API Token into a Notes application of your choosing. It is good to save this information in a place that is easy to access. You will most likely use this API Key and Token again. Push Image to Data Lake using Postman Open up your Postman application. In the top left corner you will see a button that says +New . Click on the Request button. Name your Request and create a Collection to place the Request. Click the dropdown menu inside the red box in Postman to classify this API Call as a POST Request. Copy and paste this link into the field where it says \u201cEnter request URL\u201d: https://api-{{geo_country_code}}.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/{{tenantID}}/entityType/{{entityTypeName}} You will need to replace the text in double curly braces {{}} with data associated with your Monitor workspace. First, you will need to replace {{geo_country_code}} with your specific country code. You can find your country code in your Monitor URL. The beginning of your URL will be https://dashboard-{{geo_country_code}} , either us , uk , de , or beta . Next, you will need to replace {{tenantID}} with your Maximo Asset Monitor Tenant ID. You can find your tenant ID in the top right corner of your Monitor webpage underneath your IBMiD. Last, you will need to enter the name of your Entity Type in place of {{entityTypeName}} . Now that you have modified the request URL, we will add the header. Please have handy the API Key and Token you obtained earlier. Add this information into the Header tab, : Now, navigate to the Body tab and the select form-data radio button. Enter the form data specified below. Make sure to select File from the drop down button next to your imagefilecontent . This option will allow you to select the image file you chose in the first section of this Exercise. Click the blue Send button to send your request. You should receive a 200 OK message. If you do not, make sure that everything in this section has been entered correctly. If this work is to no avail, contact your administrator. Display Image Card on Dashboard Now that you have pushed the image of your choice into the Monitor data lake, you will now need to create a JSON object for the image card you wish to display. In this JSON code, you will tell Monitor what data to show, where to show that data, and how you want the data to be shown. The JSON code that will be shown in the later steps corresponds with the summary dashboard shown below: Export Dashboard JSON Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Export and save your JSON into a folder that you can keep handy. Make sure to save the file with the file extension .json . Open the file in a text editor of your choice. Here are some good open source options: Atom , Brackets , and Sublime . Create Image Card JSON Object Please copy and paste the JSON code block below into the top of your cards array. { \"id\": \"starter-image-card\", \"size\": \"LARGE\", \"title\": \"Sourdough Starter Environment\", \"type\": \"IMAGE\", \"content\": { \"alt\": \"Sourdough Starter Environment\", \"zoomMax\": 1, \"image\": \"starter\", \"hotspots\": [ { \"icon\": \"icon--info--solid\", \"color\": \"'#0F0\", \"content\": { \"title\": \"Ambient Temperature\", \"description\": \"Curent Reading\", \"attributes\": [ { \"dataSourceId\": \"ambient_temp\", \"label\": \"Temperature\", \"unit\": \"C\" } ] }, \"locations\": [ { \"x\": \"66\", \"y\": \"50\" } ], \"thresholds\": [ { \"dataSourceId\": \"ambient_temp\", \"comparison\": \">=\", \"value\": 27, \"color\": \"red\", \"icon\": \"icon--warning--solid\" } ] } ] }, \"dataSource\": { \"attributes\": [ { \"aggregator\": \"last\", \"attribute\": \"ambient_temp\", \"id\": \"ambient_temp\" } ], \"range\": { \"type\": \"rolling\", \"count\": -24, \"interval\": \"hour\" } } }, The information below gives you the tools you need to map the data items in your Entity Type to the card you will display with your JSON code. The id at the very top needs to be a unique name for this card. Use dashes instead of spaces. The size is self explanatory. Image cards render best as LARGE . The type is the type of card such as VALUE , TIMESERIES , or IMAGE . unit refers to the unit of measurement belonging to your data item. alt refers to the title that will be presented if the picture does not load for some reason. image refers to the image that you pushed into the data lake. This value must be identical to the id value from your Postman image call. Using the framework above, map the data items that are in your Entity type to display your image card on a summary dashboard. Replace the data items in the above JSON with the applicable data items, titles, and other information from the Entity Type you are working with to tell the story you are trying to tell. If you are confused, please reference the Knowledge center page for adding image cards here . Finally, save your file with your finished image card. Be sure to employ version control and save your file with a new name every time you make serious changes in case you make an error. You want to make sure you always have a working file. Upload Your Image Card JSON Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Import and select the file that you have just been working on. If you are successful, a large grey square will appear among your line graphs to drag and drop until you are satisfied with the layout. If you are unsuccessful, you will receive an error. The error message will notify you of something to change. Another option is to use a JSON parser on the internet that will notify you if your JSON has discrepancies. If at first you do not succeed, try, try again!","title":"5.  Add Image Cards"},{"location":"add_imagecard/#create-image-card","text":"In Maximo Asset Monitor, images can add a tremendous amount of value to data visualization when paired with graphs, tables, and value cards. You can display an image on your dashboards. You are also able to place icons which called hotspots on the image cards. These icons are tied to data from individual sensors or an aggregate of all of the sensors on a summary dashboard.","title":"Create Image Card"},{"location":"add_imagecard/#create-image-card-with-the-ui-widget","text":"Save this image by right clicking then choose Save Image As... Click on the gear icon and choose Manage instance dashboard Click on Image Click on the Image card and upload the image site_map.png from step 1. Title: Site Map Time range: Last 24 hours Click on Edit image Click on the map to create a hotspot Note: if your data has x, y location coordinates you can specify them here Title: Robot Icon: User Color: Blue Click on Datasource and choose the following: Entity_Id, Travel time, Work performed Click Save Click Add Card Save and Close","title":"Create Image Card with the UI widget"},{"location":"add_imagecard/#create-image-card-with-json","text":"Using a REST API call, you are able to push an image of your choosing into the Monitor data lake and display this image on your dashboards. Inside of the JSON configuration for the image card, you are able to set alert conditions that change the icon on the hotspot. Here is what you see when you click on one of the hotspots. The image card above displays an occupancy use case. Individual occupancy sensors have been tied to each hot spot to indicate whether seats in a meeting room in the Munich IoT center are occupied. The image above shows a much more complicated image card with hotspots than you will be creating in this Exercise, but this example is something that you could use eventually in the real world. In this Exercise, you will learn how to select a photo for your image card, push your image into the Monitor data lake using a REST API call, and finally display your image card on a dashboard in Monitor. You will need Postman for this section. Please download the application at this link if you have not already: https://www.getpostman.com/","title":"Create Image Card with JSON"},{"location":"add_imagecard/#upload-image-to-monitor-datalake","text":"","title":"Upload Image to Monitor Datalake"},{"location":"add_imagecard/#choose-image","text":"Choose an image that allows you to use hotspots to tell a meaningful story. For example, choosing a floor plan of a factory floor where you can tie hotspots to assets on the floor would tell an important and meaningful story. Choose an image that is smaller than 1MB . Your API call will not be successful if you try to push a larger file. These are the types of files that you can push into the Monitor data lake.","title":"Choose Image"},{"location":"add_imagecard/#obtain-api-key","text":"Open up your Maximo Asset Monitor tenant. Open up the hamburger menu on the left side and select Services . Next to Watson IoT Platform Service , click View Details and then click View More . Copy and paste the API Key and API Token into a Notes application of your choosing. It is good to save this information in a place that is easy to access. You will most likely use this API Key and Token again.","title":"Obtain API Key"},{"location":"add_imagecard/#push-image-to-data-lake-using-postman","text":"Open up your Postman application. In the top left corner you will see a button that says +New . Click on the Request button. Name your Request and create a Collection to place the Request. Click the dropdown menu inside the red box in Postman to classify this API Call as a POST Request. Copy and paste this link into the field where it says \u201cEnter request URL\u201d: https://api-{{geo_country_code}}.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/{{tenantID}}/entityType/{{entityTypeName}} You will need to replace the text in double curly braces {{}} with data associated with your Monitor workspace. First, you will need to replace {{geo_country_code}} with your specific country code. You can find your country code in your Monitor URL. The beginning of your URL will be https://dashboard-{{geo_country_code}} , either us , uk , de , or beta . Next, you will need to replace {{tenantID}} with your Maximo Asset Monitor Tenant ID. You can find your tenant ID in the top right corner of your Monitor webpage underneath your IBMiD. Last, you will need to enter the name of your Entity Type in place of {{entityTypeName}} . Now that you have modified the request URL, we will add the header. Please have handy the API Key and Token you obtained earlier. Add this information into the Header tab, : Now, navigate to the Body tab and the select form-data radio button. Enter the form data specified below. Make sure to select File from the drop down button next to your imagefilecontent . This option will allow you to select the image file you chose in the first section of this Exercise. Click the blue Send button to send your request. You should receive a 200 OK message. If you do not, make sure that everything in this section has been entered correctly. If this work is to no avail, contact your administrator.","title":"Push Image to Data Lake using Postman"},{"location":"add_imagecard/#display-image-card-on-dashboard","text":"Now that you have pushed the image of your choice into the Monitor data lake, you will now need to create a JSON object for the image card you wish to display. In this JSON code, you will tell Monitor what data to show, where to show that data, and how you want the data to be shown. The JSON code that will be shown in the later steps corresponds with the summary dashboard shown below:","title":"Display Image Card on Dashboard"},{"location":"add_imagecard/#export-dashboard-json","text":"Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Export and save your JSON into a folder that you can keep handy. Make sure to save the file with the file extension .json . Open the file in a text editor of your choice. Here are some good open source options: Atom , Brackets , and Sublime .","title":"Export Dashboard JSON"},{"location":"add_imagecard/#create-image-card-json-object","text":"Please copy and paste the JSON code block below into the top of your cards array. { \"id\": \"starter-image-card\", \"size\": \"LARGE\", \"title\": \"Sourdough Starter Environment\", \"type\": \"IMAGE\", \"content\": { \"alt\": \"Sourdough Starter Environment\", \"zoomMax\": 1, \"image\": \"starter\", \"hotspots\": [ { \"icon\": \"icon--info--solid\", \"color\": \"'#0F0\", \"content\": { \"title\": \"Ambient Temperature\", \"description\": \"Curent Reading\", \"attributes\": [ { \"dataSourceId\": \"ambient_temp\", \"label\": \"Temperature\", \"unit\": \"C\" } ] }, \"locations\": [ { \"x\": \"66\", \"y\": \"50\" } ], \"thresholds\": [ { \"dataSourceId\": \"ambient_temp\", \"comparison\": \">=\", \"value\": 27, \"color\": \"red\", \"icon\": \"icon--warning--solid\" } ] } ] }, \"dataSource\": { \"attributes\": [ { \"aggregator\": \"last\", \"attribute\": \"ambient_temp\", \"id\": \"ambient_temp\" } ], \"range\": { \"type\": \"rolling\", \"count\": -24, \"interval\": \"hour\" } } }, The information below gives you the tools you need to map the data items in your Entity Type to the card you will display with your JSON code. The id at the very top needs to be a unique name for this card. Use dashes instead of spaces. The size is self explanatory. Image cards render best as LARGE . The type is the type of card such as VALUE , TIMESERIES , or IMAGE . unit refers to the unit of measurement belonging to your data item. alt refers to the title that will be presented if the picture does not load for some reason. image refers to the image that you pushed into the data lake. This value must be identical to the id value from your Postman image call. Using the framework above, map the data items that are in your Entity type to display your image card on a summary dashboard. Replace the data items in the above JSON with the applicable data items, titles, and other information from the Entity Type you are working with to tell the story you are trying to tell. If you are confused, please reference the Knowledge center page for adding image cards here . Finally, save your file with your finished image card. Be sure to employ version control and save your file with a new name every time you make serious changes in case you make an error. You want to make sure you always have a working file.","title":"Create Image Card JSON Object"},{"location":"add_imagecard/#upload-your-image-card-json","text":"Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Import and select the file that you have just been working on. If you are successful, a large grey square will appear among your line graphs to drag and drop until you are satisfied with the layout. If you are unsuccessful, you will receive an error. The error message will notify you of something to change. Another option is to use a JSON parser on the internet that will notify you if your JSON has discrepancies. If at first you do not succeed, try, try again!","title":"Upload Your Image Card JSON"},{"location":"addvaluecard/","text":"Create Value Card A great way to augment your Maximo Asset Monitor dashboards is with value cards. This type of card allows you to display a metric or multiple metrics on a card and is a good way to show the status of an asset. You are also able to set alert thresholds to have different icons appear on the card to indicate a positive or negative status. Create Value Card using UI widget Click on the gear icon and choose Manage instance dashboard Choose Value/KPI Title: Travel time Time range: Last 24 hours Data item: travel_time_anomaly_entity_73000 Click on the pencil icon Click on add Threshold Type 2 in the > value box Save Add card Save and close Create Value Card using JSON Export Dashboard JSON Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Export and save your JSON into a folder that you can keep handy. Make sure to save the file with the file extension .json . Open the file in a text editor of your choice. Here are some good open source options: Atom , Brackets , and Sublime . Add Value Card JSON In this Exercise, you will learn to make a more simple value card in order to best learn the theory behind the JSON mapping. You will make a value card that will look like the value card shown on the dashboard below. Please copy and paste the JSON code block below into the top of your cards array. { \"id\": \"ambient-humidity-value\", \"size\": \"SMALLWIDE\", \"title\": \"Ambient Humidity\", \"type\": \"VALUE\", \"dataSource\": { \"attributes\": [ { \"aggregator\": \"last\", \"attribute\": \"ambient_humidity\", \"id\": \"ambient_humidity\" } ] }, \"content\": { \"attributes\": [ { \"dataSourceId\": \"ambient_humidity\", \"label\": \"Current\", \"unit\": \"%\", \"precision\": 0, \"thresholds\": [ { \"color\": \"orange\", \"comparison\": \">=\", \"icon\": \"icon--warning--solid\", \"value\": 40 }, { \"color\": \"red\", \"comparison\": \">=\", \"icon\": \"icon--close--solid\", \"value\": 60 } ] } ] } }, The information below gives you the tools you need to map the data items in your Entity Type to the card you will display with your JSON code. Some other important notes about the JSON: The id at the very top needs to be a unique name for this card. Use dashes instead of spaces. The size is self explanatory. This size is SMALLWIDE The type is the type of card such as VALUE , TIMESERIES , or IMAGE . unit is the unit of measurement belonging to your data item. precision refers to the number of decimal points to be seen. Once you feel that you have correctly mapped the data items from your entity type into the above JSON format, save your file with your finished value card. Be sure to employ version control and save your file with a new name every time you make serious changes in case you make an error. You want to make sure you always have a working file. Import Dashboard JSON Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Import and select the file that you have just been working on. If you are successful, a small grey square will appear among your line graphs to drag and drop until you are satisfied with the layout. If you are unsuccessful, you will receive an error. The error message will notify you of something to change. Another option is to use a JSON parser on the internet that will notify you if your JSON has discrepancies. If at first you do not succeed, try, try again!","title":"7.  Add Value Cards"},{"location":"addvaluecard/#create-value-card","text":"A great way to augment your Maximo Asset Monitor dashboards is with value cards. This type of card allows you to display a metric or multiple metrics on a card and is a good way to show the status of an asset. You are also able to set alert thresholds to have different icons appear on the card to indicate a positive or negative status.","title":"Create Value Card"},{"location":"addvaluecard/#create-value-card-using-ui-widget","text":"Click on the gear icon and choose Manage instance dashboard Choose Value/KPI Title: Travel time Time range: Last 24 hours Data item: travel_time_anomaly_entity_73000 Click on the pencil icon Click on add Threshold Type 2 in the > value box Save Add card Save and close","title":"Create Value Card using UI widget"},{"location":"addvaluecard/#create-value-card-using-json","text":"","title":"Create Value Card using JSON"},{"location":"addvaluecard/#export-dashboard-json","text":"Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Export and save your JSON into a folder that you can keep handy. Make sure to save the file with the file extension .json . Open the file in a text editor of your choice. Here are some good open source options: Atom , Brackets , and Sublime .","title":"Export Dashboard JSON"},{"location":"addvaluecard/#add-value-card-json","text":"In this Exercise, you will learn to make a more simple value card in order to best learn the theory behind the JSON mapping. You will make a value card that will look like the value card shown on the dashboard below. Please copy and paste the JSON code block below into the top of your cards array. { \"id\": \"ambient-humidity-value\", \"size\": \"SMALLWIDE\", \"title\": \"Ambient Humidity\", \"type\": \"VALUE\", \"dataSource\": { \"attributes\": [ { \"aggregator\": \"last\", \"attribute\": \"ambient_humidity\", \"id\": \"ambient_humidity\" } ] }, \"content\": { \"attributes\": [ { \"dataSourceId\": \"ambient_humidity\", \"label\": \"Current\", \"unit\": \"%\", \"precision\": 0, \"thresholds\": [ { \"color\": \"orange\", \"comparison\": \">=\", \"icon\": \"icon--warning--solid\", \"value\": 40 }, { \"color\": \"red\", \"comparison\": \">=\", \"icon\": \"icon--close--solid\", \"value\": 60 } ] } ] } }, The information below gives you the tools you need to map the data items in your Entity Type to the card you will display with your JSON code. Some other important notes about the JSON: The id at the very top needs to be a unique name for this card. Use dashes instead of spaces. The size is self explanatory. This size is SMALLWIDE The type is the type of card such as VALUE , TIMESERIES , or IMAGE . unit is the unit of measurement belonging to your data item. precision refers to the number of decimal points to be seen. Once you feel that you have correctly mapped the data items from your entity type into the above JSON format, save your file with your finished value card. Be sure to employ version control and save your file with a new name every time you make serious changes in case you make an error. You want to make sure you always have a working file.","title":"Add Value Card JSON"},{"location":"addvaluecard/#import-dashboard-json","text":"Open up the landing page for your entity type and select the dashboard you will be uploading your image card to. Click on the gear in the top right of your chosen dashboard. Click Edit Dashboard . Click Import and select the file that you have just been working on. If you are successful, a small grey square will appear among your line graphs to drag and drop until you are satisfied with the layout. If you are unsuccessful, you will receive an error. The error message will notify you of something to change. Another option is to use a JSON parser on the internet that will notify you if your JSON has discrepancies. If at first you do not succeed, try, try again!","title":"Import Dashboard JSON"},{"location":"connect_device/","text":"Objectives In this Exercise you will learn how to: Connect physical devices to Monitor Map device Physical Interfaces to Logical Interfaces Create realtime Rules and Actions on device events Understand how device data is stored Before you begin: This Exercise requires that you: Have completed the pre-requisites required for all labs Have a Nordic Thingy. This is how you purchase Nordic Thingy. Connect a Physical Device It\u2019s time to connect a real, physical device. For this exercise you will use a Nordic Thingy. Learn more about the Nordic Thingy and its various sensors here Connect Nordic Thingy to the Internet Let\u2019s connect the a Nordic Thingy to the internet using Google Chrome on your computer. We are using Google Chrome because it has a built in Bluetooth listener. Using the connectivity page below you can connect your Nordic Thingy device to the internet and the Maximo Asset Monitor Cloud Service. You first need to pair the Thingy via Bluetooth to your computer. Carefully remove the rubber overlay to find the power switch next to the micro-usb port. A blue light should illuminate when the device is powered up. Power on the Nordic Thingy. Push the tiny switch to the left of the micro-web port Use Bluetooth in the Google Chrome Browser to connect your device to the internet. Open a tab with this web address: https://nrf52t-v2.mybluemix.net/ . This method will only work on Google Chrome as it has a built in Bluetooth listener. Below is the connectivity page you\u2019ll need to revisit if you get disconnected at any point. Click Connect button. In the list of devices, find the one matching your device, select it and click Pair . You may need to rename the Thingy if you are in close range with others also using their own Thingy. Once paired, a form will pop up. The form's presence indicates that the Thingy is connected to your computer via Bluetooth. In order to connect the Thingy to the IoT Platform, we will need to obtain the information to fill in missing fields in the form. We will obtain this information in the next section. Connect Nordic Thingy to Maximo Asset Monitor The Nordic Thingy has connectivity to the internet. You must first register device types and then devices with the IoT Platform service included with Maximo Asset Manager before they can securely send and persist data there. Navigate to and bookmark the Maximo Asset Monitor Dashboard page. You will use this throughout the Exercise: https://dashboard-beta.connectedproducts.internetofthings.ibmcloud.com/preauth?tenantid=Monitor-Demo which will bring you to the Home screen Log in to Maximo Asset Monitor. Click Login button. After logging in, you\u2019ll land in Home Screen. Click Services tab in the left side menu Next to the Watson IoT Platform Service title, click View Details . A new window will open. Click View More . Copy and paste the link of the Host URL into a new tab in your browser or simply press Launch (you might need to login in again with your IBM Id). A new page will open. Navigate to the Device Types tab Click Add Device Type button in the top right corner. Now create a new device type and name it <your last name>_thingy . For example, smith_thingy. In the figures below, you will see that the device type name has a dash in it. DO NOT PUT A DASH OR PERIOD IN YOUR DEVICE TYPE NAME. There is an issue in Monitor right now where the pipeline will break if there is a dash or period in your device type name. Click Next until you get past Finish . You\u2019ve finished creating a device type. Now you will register a new device using the Device Type you just created. Make sure to name the device the same name as your Thingy from the earlier step. Navigate back to the Browse tab and Add Device click Next until you reach Finish: Once you finish creating the device, make sure you copy and make note of the device credentials! Your device must provide device credentials to connect to the IOT Platform Service. A Nordic Thingy needs the IoT Platform tenant organization ID to connect to the IoT Platform Service. You can also find the Org ID in the top right of the screen or the browser URL. Make note of the Org ID for use in the next step. Navigate back to the Thingy page within your Chrome Browser showing the sensor values and enter the Organization ID , the Device Type , the Device ID , and the Authorization Token into the corresponding fields in the form. Click the Save button to write the token to the Thingy. You should see both the device connection and the IoT Platform service connection status indicators are green if successful. You should also now see data flowing from the Thingy to your corresponding Device ID in the IoT Platform service back in the Devices tab. Flip the Thingy upside down to create an error condition. It will beep and the light will turn red. Click on one of the rows to see the event payload in JSON format. Notice the err value in the payload changed to 1. Press the large black button on the top of the Thingy to clear the error. Note: This exercise demonstrated how to manually add a device to Maximo Asset Monitor. You would most likely programatically add devices using the included Watson IOT Platform Service REST APIs and Python SDK . Interfaces, Rules and Notifications You will create an alert notification when the Nordic Thingy has an error condition. In this next section you will learn how you can: Create physical interfaces Create logical interfaces Define conditional realtime rules and notifications Create a Physical Interface Make sure your Nordic Thingy is turned on and actively sending sensor data to the IoTP service. You may need to reconnect the Thingy in the Chrome browser using this web link and steps provided earlier. Check if the Thingy is connected. Click Browse tab in the IoT Platform service and searching the devices list for device status and recent events. Navigate to the Device Type for your Thingy and click Interfaces tab. Make sure Advanced Flow is selected and click Create Physical Interface button. Leave the default name for the physical interface and then click Next . Click + Create event type button on the next page. If your Nordic Thingy is still actively sending events, then you should see the status event show up. If the status event does not automatically appear, check the connectivity back in Browse in the device list. Select status and then click Add. Click Done to complete the creation of the physical interfaces. Create a Logical Interface Next, click + Create Logical Interface button to begin creating the logical interface. Leave the default name as is and click Next Click + Add Property button, expand the d and select and save the err property. Let\u2019s do the same for \u201ctmp\u201d, except this time we\u2019ll use the mapping field to convert the temperature from Celsius to Fahrenheit using JSONData script functions . Select + Add Property Select d.tmp and change the name to temperature Then in the mapping field, click pencil icon to edit Add the following equation: d.tmp * 1.8 + 32 . Notice that to input the numbers 1.8 and 32 you have to first select the Value operator. Another option is to switch the Advanced Editor button and paste the formula. It may cause a syntax error if you mistype, so be careful. Click green check mark when complete Click save Add the remaining properties with the names as shown below Click Next to move onto Notifications . Notifications allow you to take action when certain conditions occur. Change the State Update Notification criteria to State Changes. This will send data to your Logical interface only when the value changes. If you want to send the event all the time even when the values are the same as previous events select All events . Click the X in the upper right corner to close this dialogue box and make sure to hit the Apply button to save changes. Click Add notification + button. This will raise a notification event in IoT Platform when the Thingy\u2019s error condition is set to 1 Enter the Name, description, criteria and condition as shown below. $state.err = 1 Click Apply Click Done The interface creation is almost complete. Back in the interface view, click Activate button and activate the interfaces. If successful, you should see a green rocket ship icon next to each interface. You can check to see if your interface is working, by browsing to your device, select the State tab and switch the interface to your newly created interface. Temperature should now be shown in Fahrenheit. Store Data This next exercise focuses on how and what database tables your device data is stored in. Make sure you have completed the earlier steps in this Exercise. You should already have a device type with an active physical and logical interface and at least one device of that type sending data. You can check if your device is connected and sending data through an interface by browsing devices in the IoT Platform service and checking your devices status, recent events and state. Look at logs tab for troubleshooting issues. You should see values update when look at the state interface. Make sure you Nordic Thingy is powered up and sending data through Chrome Bluetooth connection. Device data flows through a physical interface, transformed into a logical interface and stored in a time series database table within DB2 Warehouse called IOT_<Device Type Name> . To see the table go back to the Maximo Asset Monitor window and click on Services in the left menu. Click View Details Note: When you click on View Details , and you see fields that say admin only, then please contact an administrator on the account to give you the respective DB2 link, username, and password. If instead of DB2 Warehouse, your tenant uses PostgreSQL, download DBeaver and enter the information given in the View Details tab. More information on Maximo Asset Monitor and PostgreSQL can be found here . Next to Db2 Warehouse on Cloud, and click Launch The DB2 page opens in another tab. You may see a second sign in dialog labeled Attention to change your DB2 password. Ignore the second sign in dialog. Copy and paste the username and password from the View Details window into the Db2 login page and press Sign in . Select Data in the left menu followed by selecting the Tables tab. Your table is located under the BLUADMIN Schema. To quickly find your table enter your surname used in naming the Device Type in the search field followed by pressing Enter . Selecting the BLUADMIN Schema should reveil your table as IOT_<Device Type Name> . Click on your IOT_<Device Name> table and then click the View Data button to see the data. Congratulations you have successfully connected a device and have it sending and storing data in Maximo Asset Monitor. In the next Exercise you will view the available dashboards and create new dashboards to monitor your Thingy.","title":"1.  Connect Devices"},{"location":"connect_device/#objectives","text":"In this Exercise you will learn how to: Connect physical devices to Monitor Map device Physical Interfaces to Logical Interfaces Create realtime Rules and Actions on device events Understand how device data is stored Before you begin: This Exercise requires that you: Have completed the pre-requisites required for all labs Have a Nordic Thingy. This is how you purchase Nordic Thingy.","title":"Objectives"},{"location":"connect_device/#connect-a-physical-device","text":"It\u2019s time to connect a real, physical device. For this exercise you will use a Nordic Thingy. Learn more about the Nordic Thingy and its various sensors here","title":"Connect a Physical Device"},{"location":"connect_device/#connect-nordic-thingy-to-the-internet","text":"Let\u2019s connect the a Nordic Thingy to the internet using Google Chrome on your computer. We are using Google Chrome because it has a built in Bluetooth listener. Using the connectivity page below you can connect your Nordic Thingy device to the internet and the Maximo Asset Monitor Cloud Service. You first need to pair the Thingy via Bluetooth to your computer. Carefully remove the rubber overlay to find the power switch next to the micro-usb port. A blue light should illuminate when the device is powered up. Power on the Nordic Thingy. Push the tiny switch to the left of the micro-web port Use Bluetooth in the Google Chrome Browser to connect your device to the internet. Open a tab with this web address: https://nrf52t-v2.mybluemix.net/ . This method will only work on Google Chrome as it has a built in Bluetooth listener. Below is the connectivity page you\u2019ll need to revisit if you get disconnected at any point. Click Connect button. In the list of devices, find the one matching your device, select it and click Pair . You may need to rename the Thingy if you are in close range with others also using their own Thingy. Once paired, a form will pop up. The form's presence indicates that the Thingy is connected to your computer via Bluetooth. In order to connect the Thingy to the IoT Platform, we will need to obtain the information to fill in missing fields in the form. We will obtain this information in the next section.","title":"Connect Nordic Thingy to the Internet"},{"location":"connect_device/#connect-nordic-thingy-to-maximo-asset-monitor","text":"The Nordic Thingy has connectivity to the internet. You must first register device types and then devices with the IoT Platform service included with Maximo Asset Manager before they can securely send and persist data there. Navigate to and bookmark the Maximo Asset Monitor Dashboard page. You will use this throughout the Exercise: https://dashboard-beta.connectedproducts.internetofthings.ibmcloud.com/preauth?tenantid=Monitor-Demo which will bring you to the Home screen Log in to Maximo Asset Monitor. Click Login button. After logging in, you\u2019ll land in Home Screen. Click Services tab in the left side menu Next to the Watson IoT Platform Service title, click View Details . A new window will open. Click View More . Copy and paste the link of the Host URL into a new tab in your browser or simply press Launch (you might need to login in again with your IBM Id). A new page will open. Navigate to the Device Types tab Click Add Device Type button in the top right corner. Now create a new device type and name it <your last name>_thingy . For example, smith_thingy. In the figures below, you will see that the device type name has a dash in it. DO NOT PUT A DASH OR PERIOD IN YOUR DEVICE TYPE NAME. There is an issue in Monitor right now where the pipeline will break if there is a dash or period in your device type name. Click Next until you get past Finish . You\u2019ve finished creating a device type. Now you will register a new device using the Device Type you just created. Make sure to name the device the same name as your Thingy from the earlier step. Navigate back to the Browse tab and Add Device click Next until you reach Finish: Once you finish creating the device, make sure you copy and make note of the device credentials! Your device must provide device credentials to connect to the IOT Platform Service. A Nordic Thingy needs the IoT Platform tenant organization ID to connect to the IoT Platform Service. You can also find the Org ID in the top right of the screen or the browser URL. Make note of the Org ID for use in the next step. Navigate back to the Thingy page within your Chrome Browser showing the sensor values and enter the Organization ID , the Device Type , the Device ID , and the Authorization Token into the corresponding fields in the form. Click the Save button to write the token to the Thingy. You should see both the device connection and the IoT Platform service connection status indicators are green if successful. You should also now see data flowing from the Thingy to your corresponding Device ID in the IoT Platform service back in the Devices tab. Flip the Thingy upside down to create an error condition. It will beep and the light will turn red. Click on one of the rows to see the event payload in JSON format. Notice the err value in the payload changed to 1. Press the large black button on the top of the Thingy to clear the error. Note: This exercise demonstrated how to manually add a device to Maximo Asset Monitor. You would most likely programatically add devices using the included Watson IOT Platform Service REST APIs and Python SDK .","title":"Connect Nordic Thingy to Maximo Asset Monitor"},{"location":"connect_device/#interfaces-rules-and-notifications","text":"You will create an alert notification when the Nordic Thingy has an error condition. In this next section you will learn how you can: Create physical interfaces Create logical interfaces Define conditional realtime rules and notifications","title":"Interfaces, Rules and Notifications"},{"location":"connect_device/#create-a-physical-interface","text":"Make sure your Nordic Thingy is turned on and actively sending sensor data to the IoTP service. You may need to reconnect the Thingy in the Chrome browser using this web link and steps provided earlier. Check if the Thingy is connected. Click Browse tab in the IoT Platform service and searching the devices list for device status and recent events. Navigate to the Device Type for your Thingy and click Interfaces tab. Make sure Advanced Flow is selected and click Create Physical Interface button. Leave the default name for the physical interface and then click Next . Click + Create event type button on the next page. If your Nordic Thingy is still actively sending events, then you should see the status event show up. If the status event does not automatically appear, check the connectivity back in Browse in the device list. Select status and then click Add. Click Done to complete the creation of the physical interfaces.","title":"Create a Physical Interface"},{"location":"connect_device/#create-a-logical-interface","text":"Next, click + Create Logical Interface button to begin creating the logical interface. Leave the default name as is and click Next Click + Add Property button, expand the d and select and save the err property. Let\u2019s do the same for \u201ctmp\u201d, except this time we\u2019ll use the mapping field to convert the temperature from Celsius to Fahrenheit using JSONData script functions . Select + Add Property Select d.tmp and change the name to temperature Then in the mapping field, click pencil icon to edit Add the following equation: d.tmp * 1.8 + 32 . Notice that to input the numbers 1.8 and 32 you have to first select the Value operator. Another option is to switch the Advanced Editor button and paste the formula. It may cause a syntax error if you mistype, so be careful. Click green check mark when complete Click save Add the remaining properties with the names as shown below Click Next to move onto Notifications . Notifications allow you to take action when certain conditions occur. Change the State Update Notification criteria to State Changes. This will send data to your Logical interface only when the value changes. If you want to send the event all the time even when the values are the same as previous events select All events . Click the X in the upper right corner to close this dialogue box and make sure to hit the Apply button to save changes. Click Add notification + button. This will raise a notification event in IoT Platform when the Thingy\u2019s error condition is set to 1 Enter the Name, description, criteria and condition as shown below. $state.err = 1 Click Apply Click Done The interface creation is almost complete. Back in the interface view, click Activate button and activate the interfaces. If successful, you should see a green rocket ship icon next to each interface. You can check to see if your interface is working, by browsing to your device, select the State tab and switch the interface to your newly created interface. Temperature should now be shown in Fahrenheit.","title":"Create a Logical Interface"},{"location":"connect_device/#store-data","text":"This next exercise focuses on how and what database tables your device data is stored in. Make sure you have completed the earlier steps in this Exercise. You should already have a device type with an active physical and logical interface and at least one device of that type sending data. You can check if your device is connected and sending data through an interface by browsing devices in the IoT Platform service and checking your devices status, recent events and state. Look at logs tab for troubleshooting issues. You should see values update when look at the state interface. Make sure you Nordic Thingy is powered up and sending data through Chrome Bluetooth connection. Device data flows through a physical interface, transformed into a logical interface and stored in a time series database table within DB2 Warehouse called IOT_<Device Type Name> . To see the table go back to the Maximo Asset Monitor window and click on Services in the left menu. Click View Details Note: When you click on View Details , and you see fields that say admin only, then please contact an administrator on the account to give you the respective DB2 link, username, and password. If instead of DB2 Warehouse, your tenant uses PostgreSQL, download DBeaver and enter the information given in the View Details tab. More information on Maximo Asset Monitor and PostgreSQL can be found here . Next to Db2 Warehouse on Cloud, and click Launch The DB2 page opens in another tab. You may see a second sign in dialog labeled Attention to change your DB2 password. Ignore the second sign in dialog. Copy and paste the username and password from the View Details window into the Db2 login page and press Sign in . Select Data in the left menu followed by selecting the Tables tab. Your table is located under the BLUADMIN Schema. To quickly find your table enter your surname used in naming the Device Type in the search field followed by pressing Enter . Selecting the BLUADMIN Schema should reveil your table as IOT_<Device Type Name> . Click on your IOT_<Device Name> table and then click the View Data button to see the data. Congratulations you have successfully connected a device and have it sending and storing data in Maximo Asset Monitor. In the next Exercise you will view the available dashboards and create new dashboards to monitor your Thingy.","title":"Store Data"},{"location":"create_dimensions/","text":"Using Dimensions to Aggregate data in Summary Dashboard In Maximo Asset Monitor, dimensions are metadata used for filtering or aggregating entities and their metrics. Using a REST API call, you are able to push JSON into the Monitor data lake to assign dimensions to different sensor device IDs. Let\u2019s look at an application of dimensions in Monitor. Dimensions in Maximo Asset Monitor allow for rapid actionable insights. The picture below shows a dashboard monitoring the IBM IoT Center in Munich which has been outfitted with sensors to measure comfort and occupancy. Our developers added the following dimensions: Region, Building, Floor, Zone, and Workstation. On this Building Summary dashboard, you can see on the alerts table that all 120 alerts for October 10 came from the Munich HQ building on the 27th floor in Zone 3. The dimensions enable you to tie your sensors with, in this case, location metadata that allows you to be able to drill down into Zone 3 inside of the dashboard or physically go to Zone 3 and check out the problem. Create Dimensions in the UI Click on Setup on the left hand side. Search for Your_Initials and click on the asset type you created. Click on Edit icon Click Add dimension Fill in Dimension name with COUNTRY , type Literal, and default value US Fill in Dimension name with SITE , type Literal, and default value Cambridge Fill in Dimension name with ASSET , type Literal, and default value Motor Click Save You will create a simulated set of robot assets that represent an assembly line of manufacturing robots. Create Dimensions using the API To set up your own dimensions, you will need to open up Postman. If you do not already have Postman downloaded, here is a link to download the software https://www.getpostman.com/. Obtaining an API Key In order to successfully push your JSON schema into the Monitor platform, you will need an API key and token to authenticate your POST request. We will obtain this API key and token by creating one in the Watson IoT Platform Service application linked to your Maximo Asset Monitor instance. In the hamburger menu on the left side of the screen of your tenant of Maximo Asset Monitor, click Connect . To the right of where it says Watson IoT Platform Service click View Details . Now click the Launch button. Sign into the organization that corresponds with your Monitor Tenant in the Watson IoT Platform Service window. You can locate the organization on the top right corner of your screen. Click in the red boxed area on your browser to change the organization if need be. On the left side pop out menu, click on Apps . Next, click + Generate API Key button. Click next until you hit the Generate API Key button. Nothing of importance for this exercise appears before this step. Make sure you copy and paste your API Key and Token in a safe place. You will not be able to retrieve the token again. You will need both the API Key and Token to push the dimensions to Monitor. Pushing the Dimensions using Postman In this section, you will come up with metadata you would like to assign to your entities for the purpose of drill down and quick root cause analysis. The dimensions enable you to look at devices of a certain category or drill down to a single device. Figure out the metadata you will deploy. In the example inside of the attached Postman Collection, the dimensions Country :US, Site :Cambridge, and Asset :Motor were used. You will be pushing key-value pairs associated with your devices into Monitor to create your dimensions. Open up the Postman application. In the top left corner you will see a button that says +New . Click on the Request button. Name your Request and create a Collection to place the Request. Click the dropdown menu inside the red box in Postman to classify this API Call as a POST Request. Copy and paste this link into where it says \u201cEnter request URL\u201d: https://api-beta.connectedproducts.internetofthings.ibmcloud.com/api/master/v1/TenantID/entity/type/EntityType/dimensional In the Request URL in Postman, you will need to enter your Device Type/Entity Type instead of \u201cEntityType\", and you willn need to enter the name of the Tenant you are using in place of \"TenantID\u201d. Click on Headers . ( Params will be the default select.) Enter the key-value pairs you see below. However, instead of the API Key and Token shown below, enter the API Key and Token you generated in the first section of this Exercise. Now click on Body and select raw . You will need to enter a JSON payload here to tie your Device ID with your chosen dimensions. In this case, id will always be your Nordic Thingy Device ID. id refers to the Device ID that you will be associating your key value pair with. name will be the dimension name/category that you use to drill down through, and value will be the value you are assigning to your Device ID in terms of your dimension. Here is an example of a JSON array you may use. Feel free to use more than three dimensions if you so choose. Please copy, paste, and modify the JSON below for the sake of easy formatting: [ { \"id\": \"PThingy\", \"name\" : \"COUNTRY\", \"value\" : \"US\" }, { \"id\": \"PThingy\", \"name\" : \"SITE\", \"value\" : \"Cambridge\" }, { \"id\": \"PThingy\", \"name\" : \"ASSET\", \"value\" : \"Motor\" } ] After you have finished the above steps. Click Send . You should receive a 200 OK success code from Postman. If not, make sure you entered everything correctly.","title":"6.  Add Dimensions"},{"location":"create_dimensions/#using-dimensions-to-aggregate-data-in-summary-dashboard","text":"In Maximo Asset Monitor, dimensions are metadata used for filtering or aggregating entities and their metrics. Using a REST API call, you are able to push JSON into the Monitor data lake to assign dimensions to different sensor device IDs. Let\u2019s look at an application of dimensions in Monitor. Dimensions in Maximo Asset Monitor allow for rapid actionable insights. The picture below shows a dashboard monitoring the IBM IoT Center in Munich which has been outfitted with sensors to measure comfort and occupancy. Our developers added the following dimensions: Region, Building, Floor, Zone, and Workstation. On this Building Summary dashboard, you can see on the alerts table that all 120 alerts for October 10 came from the Munich HQ building on the 27th floor in Zone 3. The dimensions enable you to tie your sensors with, in this case, location metadata that allows you to be able to drill down into Zone 3 inside of the dashboard or physically go to Zone 3 and check out the problem.","title":"Using Dimensions to Aggregate data in Summary Dashboard"},{"location":"create_dimensions/#create-dimensions-in-the-ui","text":"Click on Setup on the left hand side. Search for Your_Initials and click on the asset type you created. Click on Edit icon Click Add dimension Fill in Dimension name with COUNTRY , type Literal, and default value US Fill in Dimension name with SITE , type Literal, and default value Cambridge Fill in Dimension name with ASSET , type Literal, and default value Motor Click Save You will create a simulated set of robot assets that represent an assembly line of manufacturing robots.","title":"Create Dimensions in the UI"},{"location":"create_dimensions/#create-dimensions-using-the-api","text":"To set up your own dimensions, you will need to open up Postman. If you do not already have Postman downloaded, here is a link to download the software https://www.getpostman.com/.","title":"Create Dimensions using the API"},{"location":"create_dimensions/#obtaining-an-api-key","text":"In order to successfully push your JSON schema into the Monitor platform, you will need an API key and token to authenticate your POST request. We will obtain this API key and token by creating one in the Watson IoT Platform Service application linked to your Maximo Asset Monitor instance. In the hamburger menu on the left side of the screen of your tenant of Maximo Asset Monitor, click Connect . To the right of where it says Watson IoT Platform Service click View Details . Now click the Launch button. Sign into the organization that corresponds with your Monitor Tenant in the Watson IoT Platform Service window. You can locate the organization on the top right corner of your screen. Click in the red boxed area on your browser to change the organization if need be. On the left side pop out menu, click on Apps . Next, click + Generate API Key button. Click next until you hit the Generate API Key button. Nothing of importance for this exercise appears before this step. Make sure you copy and paste your API Key and Token in a safe place. You will not be able to retrieve the token again. You will need both the API Key and Token to push the dimensions to Monitor.","title":"Obtaining an API Key"},{"location":"create_dimensions/#pushing-the-dimensions-using-postman","text":"In this section, you will come up with metadata you would like to assign to your entities for the purpose of drill down and quick root cause analysis. The dimensions enable you to look at devices of a certain category or drill down to a single device. Figure out the metadata you will deploy. In the example inside of the attached Postman Collection, the dimensions Country :US, Site :Cambridge, and Asset :Motor were used. You will be pushing key-value pairs associated with your devices into Monitor to create your dimensions. Open up the Postman application. In the top left corner you will see a button that says +New . Click on the Request button. Name your Request and create a Collection to place the Request. Click the dropdown menu inside the red box in Postman to classify this API Call as a POST Request. Copy and paste this link into where it says \u201cEnter request URL\u201d: https://api-beta.connectedproducts.internetofthings.ibmcloud.com/api/master/v1/TenantID/entity/type/EntityType/dimensional In the Request URL in Postman, you will need to enter your Device Type/Entity Type instead of \u201cEntityType\", and you willn need to enter the name of the Tenant you are using in place of \"TenantID\u201d. Click on Headers . ( Params will be the default select.) Enter the key-value pairs you see below. However, instead of the API Key and Token shown below, enter the API Key and Token you generated in the first section of this Exercise. Now click on Body and select raw . You will need to enter a JSON payload here to tie your Device ID with your chosen dimensions. In this case, id will always be your Nordic Thingy Device ID. id refers to the Device ID that you will be associating your key value pair with. name will be the dimension name/category that you use to drill down through, and value will be the value you are assigning to your Device ID in terms of your dimension. Here is an example of a JSON array you may use. Feel free to use more than three dimensions if you so choose. Please copy, paste, and modify the JSON below for the sake of easy formatting: [ { \"id\": \"PThingy\", \"name\" : \"COUNTRY\", \"value\" : \"US\" }, { \"id\": \"PThingy\", \"name\" : \"SITE\", \"value\" : \"Cambridge\" }, { \"id\": \"PThingy\", \"name\" : \"ASSET\", \"value\" : \"Motor\" } ] After you have finished the above steps. Click Send . You should receive a 200 OK success code from Postman. If not, make sure you entered everything correctly.","title":"Pushing the Dimensions using Postman"},{"location":"facilitator_instructions/","text":"Pre-Requisite Instructions Here are the required pre-requisites for the Maximo Asset Monitor exercises. All Exercises All Exercises require that you have: A computer with a Chrome browser, internet connectivity and Bluetooth connectivity. User access to a Maximo Asset Monitor environment like the Monitor-Demo tenant URL . To get access to the Monitor-Demo tenant, please send an email to your Exercise facilitator or carlos.ferreira1@ibm.com An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Asset Monitor environment. If you are using tenant id \"Monitor-Demo\" you can try using this URL Exercise 1 Connect Devices You need a Nordic Thingy as that device will be used in the exercise. See the sections below for purchasing a Nordic Thingy. Purchasing a Nordic Thingy Purchasing a Nordic Thingy is a 4-step process: Go to the Nordic Semiconductor website: Nordic Thingy:52 Click the green Buy Now button shown in the red box to navigate to the distributers page. Select your region and choose a distributer Follow the directions on the distributer\u2019s website to checkout. IBMers can Expense a Nordic Thingy If you are an IBMer follow these instructions for expensing the Nordic Thingy Launch SAP Concur Select the Expense Tab on the top bar Select the Nordic Thingy Notification under the available expenses and Create a New Report Create a Report and fill in the boxes: Report Name, Business Purpose, Report Category, and the Cost Center you will be charging it too. Report the purchase under Non-Travel Expenses . Save the Report. Click Expense and make the Expense Type Emergency Purchase and the Expense Subtype PC Supplies . Give the Description box a meaningful description to why you\u2019re purchasing the Nordic Thingy:52. Save the expense. Submit the Report. Exercise 2 Monitor Assets Exercise 2 requires that you have completed Exercise 1 Connect Devices.","title":"Pre-Requisites"},{"location":"facilitator_instructions/#pre-requisite-instructions","text":"Here are the required pre-requisites for the Maximo Asset Monitor exercises.","title":"Pre-Requisite Instructions"},{"location":"facilitator_instructions/#all-exercises","text":"All Exercises require that you have: A computer with a Chrome browser, internet connectivity and Bluetooth connectivity. User access to a Maximo Asset Monitor environment like the Monitor-Demo tenant URL . To get access to the Monitor-Demo tenant, please send an email to your Exercise facilitator or carlos.ferreira1@ibm.com An IBM ID. If you don't have an IBM ID you can get one here : o Click Login to MY IBM button o Click Create an IBM ID link Test your access to the Maximo Asset Monitor environment. If you are using tenant id \"Monitor-Demo\" you can try using this URL","title":"All Exercises"},{"location":"facilitator_instructions/#exercise-1-connect-devices","text":"You need a Nordic Thingy as that device will be used in the exercise. See the sections below for purchasing a Nordic Thingy.","title":"Exercise 1 Connect Devices"},{"location":"facilitator_instructions/#purchasing-a-nordic-thingy","text":"Purchasing a Nordic Thingy is a 4-step process: Go to the Nordic Semiconductor website: Nordic Thingy:52 Click the green Buy Now button shown in the red box to navigate to the distributers page. Select your region and choose a distributer Follow the directions on the distributer\u2019s website to checkout.","title":"Purchasing a Nordic Thingy"},{"location":"facilitator_instructions/#ibmers-can-expense-a-nordic-thingy","text":"If you are an IBMer follow these instructions for expensing the Nordic Thingy Launch SAP Concur Select the Expense Tab on the top bar Select the Nordic Thingy Notification under the available expenses and Create a New Report Create a Report and fill in the boxes: Report Name, Business Purpose, Report Category, and the Cost Center you will be charging it too. Report the purchase under Non-Travel Expenses . Save the Report. Click Expense and make the Expense Type Emergency Purchase and the Expense Subtype PC Supplies . Give the Description box a meaningful description to why you\u2019re purchasing the Nordic Thingy:52. Save the expense. Submit the Report.","title":"IBMers can Expense a Nordic Thingy"},{"location":"facilitator_instructions/#exercise-2-monitor-assets","text":"Exercise 2 requires that you have completed Exercise 1 Connect Devices.","title":"Exercise 2 Monitor Assets"},{"location":"getting_started/","text":"Getting Started with the IBM Maximo Asset Monitor Lab! You can choose which exercises to complete based on your learning objectives, and the amount of time you have available. The available learning paths and exercises are listed in the table below. Each exercise includes multiple steps with directions. Exercise Status Learning Objectives Description 1 Ready for Use Connect Devices Connect devices and define asset types. 2 Ready for Use Monitor Assets Create dashboards that enable you to visualize asset data using asset device data. 3 Ready for Use Monitor Anomalies Apply AI functions to intelligently detect anomalies at sale, troubleshoot and understand root cause. 4 Ready for Use Create Service Requests Resolve anomalies by creating service requests in Maximo. 5 Ready for Use Add Image Cards Add image cards and hover spots to see asset conditions on your asset image. 6 Ready for Use Add Dimensions Metadata Add dimensions for filtering assets and aggregating asset metrics on Summary Dashboards. 7 Ready for Use Add Value Cards Add Value cards to your dashboards. Students doing the exercises and Facilitators preparing for delivering the exercises should read the instructions . See Contributing to Labs if you are interested in providing feedback by submitting enhancements or bugs. We also welcome your contributions to existing or new exercises. Learning Paths Your Learning Goals Recommended Exercises Time Needed Operational Monitoring of Assets Using Device Sensors 1 and 2 2 hours Anomaly Detection and Resolution 3 and 4 2 hours Visualize and Filter Assets 5, 6 and 7 2 hours Overview of Maximo Asset Monitor IBM Maximo Asset Monitor enables AI-powered remote monitoring at enterprise scale for asset maintenance and operations leaders seeking to optimize operating performance with fewer, more accurate alerts, and greater insights into what is causing them. IBM Maximo Asset Monitor aggregates operating state data and process parameters across legacy systems, historians, IoT sensors, and other repositories to provide enterprise-wide visibility into performance. It scales quickly and easily across the enterprise. AI-powered monitoring identifies only the right alerts while helping you understand complex relationships between factors causing failures. This empowers your OT and IT teams to act with speed and confidence to understand root-cause and drive digital re-invention. With Maximo Asset Monitor, asset sensors can be securely registered with the included IoT service to provide key performance indicators about the condition of an asset. These metrics can be combined in a pipeline with other business service data, analyzed by data science models, and then visualized in a responsive, customizable dashboard, all without requiring any coding. Anomaly models can help reduce the \u201cnoise\u201d that is caused by hundreds of false positive alerts using traditional threshold alerts. AI models allow clients to focus on and resolve the most critical anomalies. Demonstration Ask your facilitator for a demonstration of Maxiom Asset Monitor or watch this short 7 minute video demonstration Business Benefits Many clients have already adopted Maximo for Enterprise Asset Management (EAM), and they are realizing the benefits of extending the life of their capital investments while reducing operational and maintenance costs. They want to further leverage these assets by using the real-time operational data of those assets. For example: Product owners can create new \u201cas a service\u201d revenue sources by using new business models enabled by IoT and thereby improving their product or service user experiences, which will increase their customers\u2019 loyalty. Operations and maintenance leaders can reduce operational maintenance and extend the life of their capital investments. Reliability engineers can view historical data for forensic analysis of failure trends that allow them to prioritize design improvements to reduce warranty costs and system downtime. Compliance officers can better document historical trends to demonstrate regulatory compliance and reduce the cost and risk of non-compliance. Architecture Here is a high level functional architecture of Maximo Asset Monitor: Included Services IBM Maximo Asset Monitor includes the following IBM Cloud services that help you achieve the above business benefits to scale monitoring to the enterprise: Watson IoT Platform Connection Service Secure registration and management of devices and gateways using the included Connection Service Security of users and device Extension points for above and create rules on incoming sensor Mapping physical device types to logical interfaces that reflect the asset you want to manage Messaging service for ensuring data can be streamed in realtime Real-time rules and actions Watson IoT Platform Analytics Service Data processing and analysis of historical data using the included Analytics Service Data cleansing and transformation Job scheduling Pipeline analysis and data loading to the data lake Data events and actions Alerts and notifications Data service connections Catalog of data functions with anomaly models to intelligently identify conditions that require attention Monitor Service Out-of-the-box operational dashboards that scale to the enterprise using the included Monitor Service Shareable and customizable dashboards to allow users to respond, understand, and resolve alerts Different card types are available to be used in the dashboards: Value card, Table card, Image card, Line graph card (time series), Bar chart card, and Alert card Database Service To store data for all of the above services using the included Database Service . Which database service is included depends on which plan has been purchased. This lab is based on Db2 Warehouse on Cloud. Object Storage Service To store logs and files for above services using the included Cloud Object Storage Service For long term storage of device sensor data To store images","title":"Get Started"},{"location":"getting_started/#getting-started-with-the-ibm-maximo-asset-monitor-lab","text":"You can choose which exercises to complete based on your learning objectives, and the amount of time you have available. The available learning paths and exercises are listed in the table below. Each exercise includes multiple steps with directions. Exercise Status Learning Objectives Description 1 Ready for Use Connect Devices Connect devices and define asset types. 2 Ready for Use Monitor Assets Create dashboards that enable you to visualize asset data using asset device data. 3 Ready for Use Monitor Anomalies Apply AI functions to intelligently detect anomalies at sale, troubleshoot and understand root cause. 4 Ready for Use Create Service Requests Resolve anomalies by creating service requests in Maximo. 5 Ready for Use Add Image Cards Add image cards and hover spots to see asset conditions on your asset image. 6 Ready for Use Add Dimensions Metadata Add dimensions for filtering assets and aggregating asset metrics on Summary Dashboards. 7 Ready for Use Add Value Cards Add Value cards to your dashboards. Students doing the exercises and Facilitators preparing for delivering the exercises should read the instructions . See Contributing to Labs if you are interested in providing feedback by submitting enhancements or bugs. We also welcome your contributions to existing or new exercises.","title":"Getting Started with the IBM Maximo Asset Monitor Lab!"},{"location":"getting_started/#learning-paths","text":"Your Learning Goals Recommended Exercises Time Needed Operational Monitoring of Assets Using Device Sensors 1 and 2 2 hours Anomaly Detection and Resolution 3 and 4 2 hours Visualize and Filter Assets 5, 6 and 7 2 hours","title":"Learning Paths"},{"location":"getting_started/#overview-of-maximo-asset-monitor","text":"IBM Maximo Asset Monitor enables AI-powered remote monitoring at enterprise scale for asset maintenance and operations leaders seeking to optimize operating performance with fewer, more accurate alerts, and greater insights into what is causing them. IBM Maximo Asset Monitor aggregates operating state data and process parameters across legacy systems, historians, IoT sensors, and other repositories to provide enterprise-wide visibility into performance. It scales quickly and easily across the enterprise. AI-powered monitoring identifies only the right alerts while helping you understand complex relationships between factors causing failures. This empowers your OT and IT teams to act with speed and confidence to understand root-cause and drive digital re-invention. With Maximo Asset Monitor, asset sensors can be securely registered with the included IoT service to provide key performance indicators about the condition of an asset. These metrics can be combined in a pipeline with other business service data, analyzed by data science models, and then visualized in a responsive, customizable dashboard, all without requiring any coding. Anomaly models can help reduce the \u201cnoise\u201d that is caused by hundreds of false positive alerts using traditional threshold alerts. AI models allow clients to focus on and resolve the most critical anomalies.","title":"Overview of Maximo Asset Monitor"},{"location":"getting_started/#demonstration","text":"Ask your facilitator for a demonstration of Maxiom Asset Monitor or watch this short 7 minute video demonstration","title":"Demonstration"},{"location":"getting_started/#business-benefits","text":"Many clients have already adopted Maximo for Enterprise Asset Management (EAM), and they are realizing the benefits of extending the life of their capital investments while reducing operational and maintenance costs. They want to further leverage these assets by using the real-time operational data of those assets. For example: Product owners can create new \u201cas a service\u201d revenue sources by using new business models enabled by IoT and thereby improving their product or service user experiences, which will increase their customers\u2019 loyalty. Operations and maintenance leaders can reduce operational maintenance and extend the life of their capital investments. Reliability engineers can view historical data for forensic analysis of failure trends that allow them to prioritize design improvements to reduce warranty costs and system downtime. Compliance officers can better document historical trends to demonstrate regulatory compliance and reduce the cost and risk of non-compliance.","title":"Business Benefits"},{"location":"getting_started/#architecture","text":"Here is a high level functional architecture of Maximo Asset Monitor:","title":"Architecture"},{"location":"getting_started/#included-services","text":"IBM Maximo Asset Monitor includes the following IBM Cloud services that help you achieve the above business benefits to scale monitoring to the enterprise:","title":"Included Services"},{"location":"getting_started/#watson-iot-platform-connection-service","text":"Secure registration and management of devices and gateways using the included Connection Service Security of users and device Extension points for above and create rules on incoming sensor Mapping physical device types to logical interfaces that reflect the asset you want to manage Messaging service for ensuring data can be streamed in realtime Real-time rules and actions","title":"Watson IoT Platform Connection Service"},{"location":"getting_started/#watson-iot-platform-analytics-service","text":"Data processing and analysis of historical data using the included Analytics Service Data cleansing and transformation Job scheduling Pipeline analysis and data loading to the data lake Data events and actions Alerts and notifications Data service connections Catalog of data functions with anomaly models to intelligently identify conditions that require attention","title":"Watson IoT Platform Analytics Service"},{"location":"getting_started/#monitor-service","text":"Out-of-the-box operational dashboards that scale to the enterprise using the included Monitor Service Shareable and customizable dashboards to allow users to respond, understand, and resolve alerts Different card types are available to be used in the dashboards: Value card, Table card, Image card, Line graph card (time series), Bar chart card, and Alert card","title":"Monitor Service"},{"location":"getting_started/#database-service","text":"To store data for all of the above services using the included Database Service . Which database service is included depends on which plan has been purchased. This lab is based on Db2 Warehouse on Cloud.","title":"Database Service"},{"location":"getting_started/#object-storage-service","text":"To store logs and files for above services using the included Cloud Object Storage Service For long term storage of device sensor data To store images","title":"Object Storage Service"},{"location":"monitor_anomalies/","text":"Objectives In this Exercise you will learn how to: Create an asset instance dashboard to see how an individual asset is performing Create a summary dashboard that aggregates asset performance metrics across multiple assets of the same type Detect anomalies by applying anomaly detection functions Create alerts to prioritize anomalies Monitor alerts across multiple assets in a summary dashboard you create Troubleshoot to find the root cause of a problem Before you begin: This Exercise requires that you have completed the pre-requisites required for all Exercises Watch the 10 min video explaining why anomalies matter to business. Create Simulated Robots to Monitor In this exercise you quickly create some simulated robot operational data that you will use in your exercises in this Exercise. You will use data from simulated industry robots as the assets you are responsible to monitor. Click Home to see the top level tasks you can do with Monitor. Click Set up Click on Devices You will create a simulated set of robot assets (entities) that represent an assembly line of manufacturing robots. Click + button. Select on Sample Robot Type and click on Next button. Edit the Asset Type name prepending your own initials Your_Initials_Robots_Type . Click Create button. Monitor will create a set of robots you can monitor with simulated random data. Explore Device Type Dashboard An device dashboard displays the operational metrics for a single device, i.e. one specific industry robot. The data metrics of the robot are presented on the dashboard using cards. Click on Monitor from the left nav Click on Devices and search for Your_Initials Click on your device type On the Data tab, expand Metric to see the metrics that Monitor has created for your Robots with simulated time series data. The outline shows the acc, load, speed and torque metrics in the data items outline. Expand Dimension to see the classifications Monitor has created to filter and summarize all the Robots key performance metrics like by Manufacturer . Dimensions are meta data for describing a device that can also be used to filter devices in tables or in functions. Expand Metric (calculated) to see the functions used to create the simulated data like work_performed . Click on Monitor on the left side. Click on Devices and search for Your_Initials to find the device type you created and click on it. Robot device dashboards have been automatically created for you by Monitor. Click on device (Robot) 73000 Click on Asset Metrics Dashboard Click one of the Robot asset dashboards that have been automatically created for you by Monitor. In this exercise the Asset Dashboard for the Robots was automatically created for you. Take a moment to see what cards were created for you in the Asset Metrics Dashboard . Note the different types of cards in your dashboard. Monitor provides multiple types of cards to choose from when configuring a dashboard. Value Cards A value card shows a single or multiple entity metric value. A value may be attributed with a title, a label and a unit. The value may be given a precision and rules on threshold levels. A value card may be sized as a wide or tall card with big or small sized numbers. Line Chart Cards A line chart card shows time-series data from a single or multiple entities as a chart with time and value axes. The chart may be given a title and labels on the axes. The line chart may be shown in full screen mode and is added a data table with the metrics values plotted in the chart. A line chart may also be overlaid with an Alert metric indicating any anomalies on the metric. Table Cards A table card shows tabular data by columns. A table card is configured by referencing some data source for each column. The table may group data source values and present a count rather than each individual value. An Alerts Table is a preconfigured table presenting alert information. You will add one later for tabulating alerts. Image cards An image card shows as a custom image with configured hotspots. Each hotspot is indicated at a position on the image with an icon and configured as a value card with entity metrics. The value card is shown when clicking on the hot spot. You will add one later for displaying an image of the robot. Edit Asset Dashboard In this exercise you will modify the layout of the individual robot asset dashboard. An asset dashboard is a configuration of cards, layout and the datasource metrics for a specific asset. You can export dashboard configuration to JSON. You can also reuse and import dashboard configuration files from others. Click the gear icon to modify the layout of your robot asset dashboard. Monitor provides a responsive user interface as the display size of the device or browser window changes you can reposition the cards. Change the card layout of your dashboard by dragging cards around with you mouse. Once you are satisfied with the card layout, change the width of the browser window to a smaller size. Note the Dashboard Size of the layout has changed. Once again change the layout of your dashboard by dragging cards around with your mouse. The dashboard configuration saves all the adjustments you make to the layout for each resize of your browser window. Click on Export icon. The dashboard configuration file in a json format is saved to your local downloads directory on your computer. Click on Save and close to save the new dashboard layout. Create a Summary Dashboard In the previous exercise you modified an asset dashboard for each Robot. In this exercise you will create a Summary Dashboard . There is one summary dashboard presenting aggregated and filtered performance KPI across all robots of the type. A summary dashboard allows you to see the metrics for a filtered group of assets. \"Show me all robots from a manufacturer and with a specific firmware.\"\" These filters are called dimensions in Monitor. Later in this Exercise you will learn how to assign dimensions to the entities. Our simulated robots already have the appropriate dimensions assigned to each robot. Robot 73000 may have a manufacturer GHI Industries and Robot 73002 may have a manufacturer Rentech. A summary dashboard allows you filter assets and then compute the data metrics aggregations for the applied filter. For example, the Max, Min and Mean torque of all robots for the filtered scope of a selected manufacturer. A summary dashboard uses time grains when computing the aggregations. Monitor can display four types of summary dashboards. You can choose by hour, day, week, month time grains. A summary dashboard supports the same cards as an asset dashboard. The next steps show you how to create a daily summary dashboard for all your robots. From the side menu, click Monitor From the Asset types tab, search for your Entity Type by typing the name in the search field. Select your entity type and click on it. Click + On the Dashboards tab. On the Definition page, assign the name robot_daily_summary to the dashboard Select the Daily time grain Select load_rating and manufacturer Click Next and choose the max, min and mean for aggregation methods for all the number metrics. Click Configure dashboard Export the dashboard to JSON that you will use later. Click Create Click on robot_daily_summary tab and see that the dashboard is being created. [Optional] repeat the steps above to create summary dashboards to create hourly, weekly and monthly aggregation performance metrics summaries of the all robots. Add Metric Line Card You need anomalies to be able to detect anomalies. Monitor provides simulated anomalies that you can apply to learn about anomaly detection. In this exercise you will: Add a simulated anomaly metric named travel_time_anomaly . Add a line card to display the travel_time_anomaly metric on an asset dashboard. The travel_time deviation that was generated earlier for your robot simulated data did not have anomalies in it. The AnomalyGeneratorExtremeValue function adds anomalies to the metric you choose. It abruptly increases or decreases the normal metric values for the metric you choose. In the steps below you will use this function to add a new calculated metric with anomalies named travel_time_anomaly You will add a line chart to display the anomalous data on your asset dashboard. Later you will use Maximo Asset Monitor anomaly detection functions to detect these anomalies. A SCADA system would likely not be able to detect these type of abrupt anomaly increase or decrease in metric values. SCADA systems typically only provide max or min business rule thresholds. Add Simulated Anomaly Data for Travel Time In this part of the exercise you will create simulated extreme anomalous values for travel time. 1. Click on Setup on the left hand side. 2. Search for Your_Initials and click on the asset type you created. 3. Click on 73000 from the table. 4. Click on Define dimensions in asset type 5. Click on Data tab. Click on + Search the function catalog for AnomalyGeneratorExtremeValue to create extreme simulated anomaly data. 6. Click Select 7. Choose travel_time for the metric input_item . Extreme anomaly values will be added to this time series metric. 8. Set factor to a value of 100 . This is how frequently an anomaly will occur. An anomaly will be generated after every 100 data points. 9. Set size to a value of 4 . This is how extreme value will be. An anomaly will be 4 times the source travel_time metric. 10. Click Next 11. Click Auto schedule on button to configure the functions schedule. 12. Set the output_metric to travel_time_anomaly . 13. Set the Calculating the last to 2 days to have Monitor generate 2 data of historical simulated anomalous data for travel_time_anomaly . 14. Click Create . After 15 minutes the function should be complete and the anomaly data will be available. Add Simulated Anomaly Travel Time Line Card to Instance Dashboard using the UI widget In this part of the exercise you will visualize the simulated travel_time_anomaly in a line card. From the side menu, click Monitor Search for Your_Initials and click on the asset type you created. Click on robot_daily_summary tab Click on gear icon top right. Choose Edit dashboards Choose Time series line from the right hand selection Title: Travel Time with Anomaly Time range: Last 24 Hours Data item: travel_time_anomaly Click Settings tab Unit: sec Click Add card Save and Close Add Simulated Anomaly Travel Time Line Card to Instance Dashboard using JSON In this part of the exercise you will visualize the simulated travel_time_anomaly in a line card. Click on Industrial Robot summary tab Click on Gear icon top right. Choose Edit dashboards Click on Export icon top right. Asset dashboard json file should be saved in your browser downloads directory with a name of Industrial Robot summary-dashboard.json Open the exported instance dashboard JSON file using an Integrated Developer Environment like Atom or copy the file contents into an online Web JSON editor Read and learn about the JSON structure of Monitor dashboard template Study the JSON file cards in the editor. Insert the travel_time line chart card json below into the \"cards\":[] . { \"content\": { \"series\": [ { \"dataSourceId\": \"travel_time_anomaly\", \"label\": \"Travel Time\" } ], \"unit\": \"sec\" }, \"dataSource\": { \"attributes\": [ { \"attribute\": \"travel_time_anomaly\", \"id\": \"travel_time_anomaly\" } ], \"range\": { \"count\": -24, \"interval\": \"hour\" }, \"timeGrain\": \"day\" }, \"id\": \"travel_time_anomaly_line_card\", \"size\": \"LARGE\", \"title\": \"Travel Time with Anomaly\", \"type\": \"TIMESERIES\" }, Notice how the JSON nodes for \"content\": {\"series\": and \"content\": {\"dataSourceId\": don't have an aggregation \"aggregator\": \"min\", like other line metrics in summary dashboard JSON. As a result the travel_time_anomaly metric line chart data will display raw grain metric data. Notice how the \"range\": {\"count\": -24,\"interval\": \"hour\"} JSON node lets Monitor know to only display the last 24 hours of data. Make sure to change all values with card sizes of XLARGE to LARGE and XSMALLWIDE to SMALLWIDE , since these formats have been deprecated. In the IDE, save your changes to the instance dashboard JSON file. You can see the finished Industrial_Robot_Instance_Travel_Time.json Return to the Monitor dashboard editor and click on the Import icon. Choose the file you updated with the line card click open to import your updated JSON file. Your asset dashboard should now look similar to the one below and have a travel_time_anomaly Card with some extreme anomalies like the one in the red rectangle. . Add Anomaly Detection Maximo Asset Monitor includes models to detect anomalies in the function catalog. The anomaly detection functions can detect many types of anomaly patterns. These include: Varying signal becomes flat line which can be caused by a defective or tampered with sensor. Varying signal becomes a near vertical line which can be caused by a defective sensor or extreme changes to the system. Sudden peak maximum or minimum which can be caused by operating equipment outside normal operating procedures. Flat line becomes a varying signal which can be a system that has been running smoothly and then becomes out of tolerance or unstable. No sensor data is available which can be caused by a defective sensor or network connectivity issues. A predicted value doesn't come within the threshold based on correlated dependent target variables values. In this exercise you will: Choose an asset to analyze. Choose a metric to analyze. Add anomaly functions to your Robot Asset Type to score how likely an anomaly is occurring. Add a line chart to visually compare if high anomaly model scores correlate with the robot travel_time_anomaly metric on each robot asset dashboard. Add anomaly alert functions with score thresholds that corresponds to a level that indicates an anomaly for a robot metric. Update a function with a new metric name or configuration values if needed. Add alerts to a line chart to visually see where anomalies are occurring on the travel_time_anomaly metric. Before you begin: Watch the 14 min video explaining what anomaly detection functions are available in Maximo Asset Monitor and what anomaly patterns are detected. Watch the 19 min video explaining how to configure anomaly detection functions, alerts and dashboards. Imagine you are managing a fleet of delivery vehicles. One out of the five vehicles is a car instead of a scooter. If you wanted to detect anomalies for excessive miles per gallon performance you should analyze the miles per gallon metric for the car separately from the scooters. Add an EntityFilter function to isolate a function analysis to an individual asset. While editing your entity type, search the function catalog for EntityFilter function. On the Data tab, click the '+' button and search in the function catalog for EntityFilter . Click Next Enter the list of entity ids separated by a comma or 73000 for just one entity. On the function Output tab, enter the name of they filtered entity entity_73000 for the output metric name. Click Create Choose a Metric to Analyze Add the Filter function you can isolate your analysis to an individual entity and metric. Select the metrics to analyze from the filtered entities by adding Filter. While editing your entity type, search the function catalog for Filter function. On the Data tab, click the '+' button and search in the function catalog for Filter . Click Next Choose entity_73000 input item from the previous function as source shown below. On the function Configuration tab, choose ${entity_73000} == True as the expression. On the function Configuration tab, choose travel_time_anomaly as the metric to analyzed for filtered_sources . Click Next On the function Output tab, enter the name of they filtered entity travel_time_anomaly_entity_73000 for the output metric name. Add Anomaly Functions You will add an anomaly function that will provide a score of how likely the single input metric is having anomalies during the specified window. The directions that follow will use the metric travel_time_anomaly which will analyze all robots for that metric. If you only want to analyze one robot entity 73000 , then select entity filtered metric created in the previous step travel_time_anomaly_entity_73000 instead. Search the function catalog for anomaly detection functions to detect anomalies for the metric travel_time_anomaly . On the Data tab, click the '+' button and search in the function catalog for Anomaly . Select K-MeansAnomalyScore . Notice the different kinds of Anomaly Model functions included with Monitor. Click Select button. Select the metric to score for anomalies travel_time_anomaly Anomaly detection functions require a window size which is the number of samples points to evaluate each time the model is scheduled to execute. Enter a windowsize of 12 . Name the calculated metric travel_time_kmeans_score Click Next to configure schedule, look back period and name the alert. Click Auto schedule on button to configure anomaly function scoring schedule. Set the anomaly function to execute every 15 minutes. The function will look for new data for travel_time_anomaly that have been added in the last 15 minutes and calculate alerts for those new data items in the windowsize . Set the look back period to 2 days. This will calculate historical scores looking back 2 days using the new configuration values with the historical metric values for travel_time_anomaly . Set the output metric name for the alert travel_time_kmeans_score Click Create to create the calculated metric. It will take 15 minutes for the calculated metric to update. While waiting lets create anomaly functions for the other anomaly detection functions. See the guidance in the table below for scheduling anomaly functions. Repeat the above steps in this exercise adding, configuring and naming the anomaly scoring models in a similar way for the other models. Use the tool tip suggestions for setting the input arguments default values: Search for FFTbasedGeneralizedAnomalyScore2 in the function catalog. Configure and name it travel_time_fft_score Search for GeneralizedAnomalyScore in the function catalog. Configure and name it travel_time_ga_score Search for SaliencybasedGeneralizedAnomalyScore in the function catalog. Configure and name it travel_time_saliency_score Search for SpectralAnomalyScore in the function catalog. Configure and name it travel_time_spectral_score Table - Suggested Scoring Schedule Data Grain Frequency Sample Window Data Required Schedule Scoring 1 Day 12 24 Days Noncritical \u2013 Once per 12 days Critical - Once per day 1 Hour 12 24 Hours Noncritical \u2013 Once per 12 days Critical - Once per 1 hour 5 Minutes 12 2 Hours Noncritical \u2013 Once per 60 mins Critical - Once per 5 mins 1 Minute 12 1 Hour Noncritical \u2013 Once per 12 mins Critical - Once per 5 mins Add a Multi Series Line Chart using the UI widget From the side menu, click Monitor Search for Your_Initials and click on the asset type you created. Click on robot_daily_summary tab Click on gear icon top right. Choose Edit dashboards Click on Time series line Title: Anomaly Scores for Travel Time Time range: Last 24 hours Choose the following calculated metrics: travel_time_spectral_score, travel_time_saliency_score, travel_time_kmeans_score, travel_time_ga_score, travel_time_fft_score, travel_time_anomaly Click on Settings X-axis-label: Time Y-axis-label: Score Click Add card Save and Close Add a Multi Series Line Chart using JSON Add a line chart** to visually compare if high anomaly model scores correlate with the robot travel_time_anomaly metric on each robot instance dashboard. In this exercise you will add a multi series line chart card to your instance dashboard that plots the anomaly model scores for time_travel_anomaly metric. You can then visually correlate which models are effective at detecting anomalies by seeing which model scores are high when the anomalies happen. From the asset dashboard click on the gear icon Select Edit dashboard Add the following line chart card Json for travel_time_anomaly metric anomaly function scores to your asset dashboard. { \"id\": \"card-anomaly-scores-line-timeseries\", \"dataSource\": { \"attributes\": [ { \"attribute\": \"travel_time_anomaly\", \"id\": \"travel_time_anomaly\" }, { \"attribute\": \"travel_time_spectral_score\", \"id\": \"travel_time_spectral_score\" }, { \"attribute\": \"travel_time_saliency_score\", \"id\": \"travel_time_saliency_score\" }, { \"attribute\": \"travel_time_ga_score\", \"id\": \"travel_time_ga_score\" }, { \"attribute\": \"travel_time_fft_score\", \"id\": \"travel_time_fft_score\" }, { \"attribute\": \"travel_time_kmeans_score\", \"id\": \"travel_time_kmeans_score\" } ], \"range\": { \"count\": -24, \"interval\": \"hour\" } }, \"content\": { \"series\": [ { \"dataSourceId\": \"travel_time_anomaly\", \"label\": \"Travel Time Deviation \" },{ \"dataSourceId\": \"travel_time_spectral_score\", \"label\": \"Spectral\" }, { \"dataSourceId\": \"travel_time_saliency_score\", \"label\": \"Saliency\" }, { \"dataSourceId\": \"travel_time_ga_score\", \"label\": \"Generalized\" }, { \"dataSourceId\": \"travel_time_fft_score\", \"label\": \"FFT\" }, { \"dataSourceId\": \"travel_time_kmeans_score\", \"label\": \"Kmeans\" } ], \"xLabel\": \"Time\", \"yLabel\": \"Score\" }, \"size\": \"MEDIUM\", \"title\": \"Anomaly Scores for Travel Time\", \"type\": \"TIMESERIES\" }, 4. View the the anomaly model scores for time_travel_anomaly metric line chart card on each robot asset dashboard. Analyze the anomaly high scores for each model to see which ones happen when the anomaly does for time_travel_anomaly happens. It should look something like the card below 5. In the line chart click Spectral label so that you can see only the line chart of each score versus time_travel_anomaly metric value. 6. Click on Spectral label again to hide that line. Select the Saliency label to see anomaly score line. Notice how the models score higher when there is an anomaly. 7. Study each instance dashboard to see where the anomaly scores are high and time_travel_anomaly metric appears to have an anomaly. Make note of the score levels that correlate with your Robots anomalies that were generated in the travel_time_anomaly metric. You will use this in the next exercise when you create alerts to notify you that anomalies have occurred. The table below has some suggested starting values: Anomaly Score Upper Threshold travel_time_spectral_score 99 travel_time_saliency_score 105 travel_time_ga_score 0.4 travel_time_fft_score 104 travel_time_kmeans_score 8 Add Anomaly Alerts In this exercise you will create alerts for each anomaly function score identified in the previous exercise. You will set the alert thresholds to values of the visually correlated anomaly scores using the upper_threshold values from the table in Add Anomaly Functions As you learned earlier, alerts are a function in the Maximo Asset Monitor catalog that can be configured to notify you that certain asset conditions require attention. There are a several alert functions included in the catalog like Alert High , Alert Low and Alert Expression Filter . Like other functions in the catalog, these alerts can be scheduled to run every five minutes or less frequently. Add a Alert High Value alert for each anomaly model. Alerts can calculate historical values for a given function configuration. Click + button access the Function Catalog. Search on Alert Select the Alert High Value function and then click Select button. Configure the alert to trigger when the value travel_time_spectral_score reaches 99 . An operator would be required to investigate each anomaly alert when they occur. It is important to avoid setting the alert upper_threshold value too high which could cause anomalies to go undetected. Vice versa avoid setting the alert upper_threshold value too low which could cause false alerts. False alerts are those alerts that triggered when there isn't an anomaly. Set input_item to travel_time_spectral_score . Set upper_threshold value to 99 . Set Severity value to High . You can add optionally add separate alerts for Medium and Low thresholds. Set Status value to New . Alerts don't have any order. They can start or finish an in any order. Users can then transition them to New Validated , Acknowleged and finally Resolved . Monitor does not provide a way to force specific state transition paths for alerts. Click Next to configure schedule, look back period and name the alert. Click Auto schedule button to configure schedule. Set the alert to execute every 15 minutes. The alert will look for new data for travel_time_spectral_score that have been added in the last 15 minutes and calculate alerts for those new data items. Leave the look back period set to 1 days. This will calculate alerts looking back 2 days using the historical values for travel_time_spectral_score . Set the output metric name for the alert travel_time_spectral_alert Click Create to create the alert configuration. It will take 15 minutes for the alert to update. While waiting lets create the alerts for the other anomaly model scores. Repeat the above steps in this exercise adding, configuring and naming alerts for each anomaly scoring model using the expression and alert names below. Search Catalog for Model Upper Threshold Output Metric Alert Name SpectralAnomalyScore2 99 travel_time_spectral_alert SaliencybasedGeneralizedAnomalyScore 105 travel_time_saliency_alert GeneralizedAnomalyScore 0.4 travel_time_ga_alert FFTbasedGeneralizedAnomalyScore2 104 travel_time_fft_alert KMeansAnomalyScore 8 travel_time_kmeans_alert Update Functions You can update functions with new a new metric name or configuration value. In this exercise you will review and correct any function names that are improperly spelt. Go to your entity type and click on the Data tab. Expand the Alert (calculated) section of the Data Items to see the alerts. They should look something like the figure below. Check the naming of each alert. If they are misnamed, click on the alert name in Data Items column. On the frame that opens, click the Configure . On the dialog that opens and Next buttons. Change the Output metric name to the correct spelling. Add Alerts to Line Chart In this exercises you will add the travel_time_anomaly alerts to the line card for the travel_time_anomaly on the robots instance dashboard. Start by exporting the robots instance dashboard JSON and adding the alerts additionalData JSON below to the travel_time_anomaly metric line chart so that you can see red dots in the areas where there likely is an anomaly. Edit the robot instance dashboard template JSON. Export and modify the JSON adding the highlighted JSON below in an IDE to the travel_time_anomaly card that you added earlier. , \"additionalData\": { \"type\": \"alert\", \"dataFilter\": { \"name\": [ \"travel_time_spectral_alert\", \"travel_time_saliency_alert\", \"travel_time_ga_alert\", \"travel_time_fft_alert\", \"travel_time_kmeans_alert\" ] } }, The highlighted gray JSON below shows where you should insert the json above. Save the JSON file in the IDE. Import the saved JSON file into the Monitor Instance Dashboard. Save the dashboard. View multiple robot instance dashboards. Analyze the travel_time_anomaly line chart looking for anomalies and alert red dots. When you find one, hoover over it with your mouse cursor. It should look something like the dashboard below Add Alerts Table Card Add Alert Table Card using the UI widget From the side menu, click Monitor Search for Your_Initials and click on the asset type you created. Click on robot_daily_summary tab Click on gear icon top right. Choose Edit dashboards Click on Alert table Title: Robot alerts from the last 24 hours Time range: Last 24 hours Click Add card Save and Close You should now have the table in your summary dashboard showing the following Anomaly detection functions scoring. Add Alert Table Card using JSON In the previous exercise you visually represented the anomaly alerts as red points on the line chart. It's helpful to also see alerts organized in a table so that you can easily prioritize and act on them. Add a table card that displays the travel_time_anomaly_alerts by robots for the last 24 hours. Add the following card to your instance dashboard template json. { \"id\": \"travel_time_anomaly_alerts\", \"size\": \"XLARGE\", \"title\": \"Robot alerts from the last 24 hours\", \"type\": \"ALERT\", \"dataSource\": { \"range\": { \"count\": -24, \"interval\": \"hour\" }, \"timeGrain\": \"input\", \"type\": \"alert\" } }, You should now have the table in your summary dashboard showing the following Anomaly detection functions scoring. From the calendar control in the top right of the dashboard pick an earlier date to see the historical alerts for the robots on a specific date. Congratulations you have successfully create an asset dashboard and a summary dashboard that aggregates asset performance metrics across multiple assets. You also learned how to detect anomalies by applying anomaly detection functions and alerts at scale across all your enterprise assets.","title":"3.  Monitor Anomalies"},{"location":"monitor_anomalies/#objectives","text":"In this Exercise you will learn how to: Create an asset instance dashboard to see how an individual asset is performing Create a summary dashboard that aggregates asset performance metrics across multiple assets of the same type Detect anomalies by applying anomaly detection functions Create alerts to prioritize anomalies Monitor alerts across multiple assets in a summary dashboard you create Troubleshoot to find the root cause of a problem Before you begin: This Exercise requires that you have completed the pre-requisites required for all Exercises Watch the 10 min video explaining why anomalies matter to business.","title":"Objectives"},{"location":"monitor_anomalies/#create-simulated-robots-to-monitor","text":"In this exercise you quickly create some simulated robot operational data that you will use in your exercises in this Exercise. You will use data from simulated industry robots as the assets you are responsible to monitor. Click Home to see the top level tasks you can do with Monitor. Click Set up Click on Devices You will create a simulated set of robot assets (entities) that represent an assembly line of manufacturing robots. Click + button. Select on Sample Robot Type and click on Next button. Edit the Asset Type name prepending your own initials Your_Initials_Robots_Type . Click Create button. Monitor will create a set of robots you can monitor with simulated random data.","title":"Create Simulated Robots to Monitor"},{"location":"monitor_anomalies/#explore-device-type-dashboard","text":"An device dashboard displays the operational metrics for a single device, i.e. one specific industry robot. The data metrics of the robot are presented on the dashboard using cards. Click on Monitor from the left nav Click on Devices and search for Your_Initials Click on your device type On the Data tab, expand Metric to see the metrics that Monitor has created for your Robots with simulated time series data. The outline shows the acc, load, speed and torque metrics in the data items outline. Expand Dimension to see the classifications Monitor has created to filter and summarize all the Robots key performance metrics like by Manufacturer . Dimensions are meta data for describing a device that can also be used to filter devices in tables or in functions. Expand Metric (calculated) to see the functions used to create the simulated data like work_performed . Click on Monitor on the left side. Click on Devices and search for Your_Initials to find the device type you created and click on it. Robot device dashboards have been automatically created for you by Monitor. Click on device (Robot) 73000 Click on Asset Metrics Dashboard Click one of the Robot asset dashboards that have been automatically created for you by Monitor. In this exercise the Asset Dashboard for the Robots was automatically created for you. Take a moment to see what cards were created for you in the Asset Metrics Dashboard . Note the different types of cards in your dashboard. Monitor provides multiple types of cards to choose from when configuring a dashboard. Value Cards A value card shows a single or multiple entity metric value. A value may be attributed with a title, a label and a unit. The value may be given a precision and rules on threshold levels. A value card may be sized as a wide or tall card with big or small sized numbers. Line Chart Cards A line chart card shows time-series data from a single or multiple entities as a chart with time and value axes. The chart may be given a title and labels on the axes. The line chart may be shown in full screen mode and is added a data table with the metrics values plotted in the chart. A line chart may also be overlaid with an Alert metric indicating any anomalies on the metric. Table Cards A table card shows tabular data by columns. A table card is configured by referencing some data source for each column. The table may group data source values and present a count rather than each individual value. An Alerts Table is a preconfigured table presenting alert information. You will add one later for tabulating alerts. Image cards An image card shows as a custom image with configured hotspots. Each hotspot is indicated at a position on the image with an icon and configured as a value card with entity metrics. The value card is shown when clicking on the hot spot. You will add one later for displaying an image of the robot.","title":"Explore Device Type Dashboard"},{"location":"monitor_anomalies/#edit-asset-dashboard","text":"In this exercise you will modify the layout of the individual robot asset dashboard. An asset dashboard is a configuration of cards, layout and the datasource metrics for a specific asset. You can export dashboard configuration to JSON. You can also reuse and import dashboard configuration files from others. Click the gear icon to modify the layout of your robot asset dashboard. Monitor provides a responsive user interface as the display size of the device or browser window changes you can reposition the cards. Change the card layout of your dashboard by dragging cards around with you mouse. Once you are satisfied with the card layout, change the width of the browser window to a smaller size. Note the Dashboard Size of the layout has changed. Once again change the layout of your dashboard by dragging cards around with your mouse. The dashboard configuration saves all the adjustments you make to the layout for each resize of your browser window. Click on Export icon. The dashboard configuration file in a json format is saved to your local downloads directory on your computer. Click on Save and close to save the new dashboard layout.","title":"Edit Asset Dashboard"},{"location":"monitor_anomalies/#create-a-summary-dashboard","text":"In the previous exercise you modified an asset dashboard for each Robot. In this exercise you will create a Summary Dashboard . There is one summary dashboard presenting aggregated and filtered performance KPI across all robots of the type. A summary dashboard allows you to see the metrics for a filtered group of assets. \"Show me all robots from a manufacturer and with a specific firmware.\"\" These filters are called dimensions in Monitor. Later in this Exercise you will learn how to assign dimensions to the entities. Our simulated robots already have the appropriate dimensions assigned to each robot. Robot 73000 may have a manufacturer GHI Industries and Robot 73002 may have a manufacturer Rentech. A summary dashboard allows you filter assets and then compute the data metrics aggregations for the applied filter. For example, the Max, Min and Mean torque of all robots for the filtered scope of a selected manufacturer. A summary dashboard uses time grains when computing the aggregations. Monitor can display four types of summary dashboards. You can choose by hour, day, week, month time grains. A summary dashboard supports the same cards as an asset dashboard. The next steps show you how to create a daily summary dashboard for all your robots. From the side menu, click Monitor From the Asset types tab, search for your Entity Type by typing the name in the search field. Select your entity type and click on it. Click + On the Dashboards tab. On the Definition page, assign the name robot_daily_summary to the dashboard Select the Daily time grain Select load_rating and manufacturer Click Next and choose the max, min and mean for aggregation methods for all the number metrics. Click Configure dashboard Export the dashboard to JSON that you will use later. Click Create Click on robot_daily_summary tab and see that the dashboard is being created. [Optional] repeat the steps above to create summary dashboards to create hourly, weekly and monthly aggregation performance metrics summaries of the all robots.","title":"Create a Summary Dashboard"},{"location":"monitor_anomalies/#add-metric-line-card","text":"You need anomalies to be able to detect anomalies. Monitor provides simulated anomalies that you can apply to learn about anomaly detection. In this exercise you will: Add a simulated anomaly metric named travel_time_anomaly . Add a line card to display the travel_time_anomaly metric on an asset dashboard. The travel_time deviation that was generated earlier for your robot simulated data did not have anomalies in it. The AnomalyGeneratorExtremeValue function adds anomalies to the metric you choose. It abruptly increases or decreases the normal metric values for the metric you choose. In the steps below you will use this function to add a new calculated metric with anomalies named travel_time_anomaly You will add a line chart to display the anomalous data on your asset dashboard. Later you will use Maximo Asset Monitor anomaly detection functions to detect these anomalies. A SCADA system would likely not be able to detect these type of abrupt anomaly increase or decrease in metric values. SCADA systems typically only provide max or min business rule thresholds.","title":"Add Metric Line Card"},{"location":"monitor_anomalies/#add-simulated-anomaly-data-for-travel-time","text":"In this part of the exercise you will create simulated extreme anomalous values for travel time. 1. Click on Setup on the left hand side. 2. Search for Your_Initials and click on the asset type you created. 3. Click on 73000 from the table. 4. Click on Define dimensions in asset type 5. Click on Data tab. Click on + Search the function catalog for AnomalyGeneratorExtremeValue to create extreme simulated anomaly data. 6. Click Select 7. Choose travel_time for the metric input_item . Extreme anomaly values will be added to this time series metric. 8. Set factor to a value of 100 . This is how frequently an anomaly will occur. An anomaly will be generated after every 100 data points. 9. Set size to a value of 4 . This is how extreme value will be. An anomaly will be 4 times the source travel_time metric. 10. Click Next 11. Click Auto schedule on button to configure the functions schedule. 12. Set the output_metric to travel_time_anomaly . 13. Set the Calculating the last to 2 days to have Monitor generate 2 data of historical simulated anomalous data for travel_time_anomaly . 14. Click Create . After 15 minutes the function should be complete and the anomaly data will be available.","title":"Add Simulated Anomaly Data for Travel Time"},{"location":"monitor_anomalies/#add-simulated-anomaly-travel-time-line-card-to-instance-dashboard-using-the-ui-widget","text":"In this part of the exercise you will visualize the simulated travel_time_anomaly in a line card. From the side menu, click Monitor Search for Your_Initials and click on the asset type you created. Click on robot_daily_summary tab Click on gear icon top right. Choose Edit dashboards Choose Time series line from the right hand selection Title: Travel Time with Anomaly Time range: Last 24 Hours Data item: travel_time_anomaly Click Settings tab Unit: sec Click Add card Save and Close","title":"Add Simulated Anomaly Travel Time Line Card to Instance Dashboard using the UI widget"},{"location":"monitor_anomalies/#add-simulated-anomaly-travel-time-line-card-to-instance-dashboard-using-json","text":"In this part of the exercise you will visualize the simulated travel_time_anomaly in a line card. Click on Industrial Robot summary tab Click on Gear icon top right. Choose Edit dashboards Click on Export icon top right. Asset dashboard json file should be saved in your browser downloads directory with a name of Industrial Robot summary-dashboard.json Open the exported instance dashboard JSON file using an Integrated Developer Environment like Atom or copy the file contents into an online Web JSON editor Read and learn about the JSON structure of Monitor dashboard template Study the JSON file cards in the editor. Insert the travel_time line chart card json below into the \"cards\":[] . { \"content\": { \"series\": [ { \"dataSourceId\": \"travel_time_anomaly\", \"label\": \"Travel Time\" } ], \"unit\": \"sec\" }, \"dataSource\": { \"attributes\": [ { \"attribute\": \"travel_time_anomaly\", \"id\": \"travel_time_anomaly\" } ], \"range\": { \"count\": -24, \"interval\": \"hour\" }, \"timeGrain\": \"day\" }, \"id\": \"travel_time_anomaly_line_card\", \"size\": \"LARGE\", \"title\": \"Travel Time with Anomaly\", \"type\": \"TIMESERIES\" }, Notice how the JSON nodes for \"content\": {\"series\": and \"content\": {\"dataSourceId\": don't have an aggregation \"aggregator\": \"min\", like other line metrics in summary dashboard JSON. As a result the travel_time_anomaly metric line chart data will display raw grain metric data. Notice how the \"range\": {\"count\": -24,\"interval\": \"hour\"} JSON node lets Monitor know to only display the last 24 hours of data. Make sure to change all values with card sizes of XLARGE to LARGE and XSMALLWIDE to SMALLWIDE , since these formats have been deprecated. In the IDE, save your changes to the instance dashboard JSON file. You can see the finished Industrial_Robot_Instance_Travel_Time.json Return to the Monitor dashboard editor and click on the Import icon. Choose the file you updated with the line card click open to import your updated JSON file. Your asset dashboard should now look similar to the one below and have a travel_time_anomaly Card with some extreme anomalies like the one in the red rectangle. .","title":"Add Simulated Anomaly Travel Time Line Card to Instance Dashboard using JSON"},{"location":"monitor_anomalies/#add-anomaly-detection","text":"Maximo Asset Monitor includes models to detect anomalies in the function catalog. The anomaly detection functions can detect many types of anomaly patterns. These include: Varying signal becomes flat line which can be caused by a defective or tampered with sensor. Varying signal becomes a near vertical line which can be caused by a defective sensor or extreme changes to the system. Sudden peak maximum or minimum which can be caused by operating equipment outside normal operating procedures. Flat line becomes a varying signal which can be a system that has been running smoothly and then becomes out of tolerance or unstable. No sensor data is available which can be caused by a defective sensor or network connectivity issues. A predicted value doesn't come within the threshold based on correlated dependent target variables values. In this exercise you will: Choose an asset to analyze. Choose a metric to analyze. Add anomaly functions to your Robot Asset Type to score how likely an anomaly is occurring. Add a line chart to visually compare if high anomaly model scores correlate with the robot travel_time_anomaly metric on each robot asset dashboard. Add anomaly alert functions with score thresholds that corresponds to a level that indicates an anomaly for a robot metric. Update a function with a new metric name or configuration values if needed. Add alerts to a line chart to visually see where anomalies are occurring on the travel_time_anomaly metric. Before you begin: Watch the 14 min video explaining what anomaly detection functions are available in Maximo Asset Monitor and what anomaly patterns are detected. Watch the 19 min video explaining how to configure anomaly detection functions, alerts and dashboards. Imagine you are managing a fleet of delivery vehicles. One out of the five vehicles is a car instead of a scooter. If you wanted to detect anomalies for excessive miles per gallon performance you should analyze the miles per gallon metric for the car separately from the scooters. Add an EntityFilter function to isolate a function analysis to an individual asset. While editing your entity type, search the function catalog for EntityFilter function. On the Data tab, click the '+' button and search in the function catalog for EntityFilter . Click Next Enter the list of entity ids separated by a comma or 73000 for just one entity. On the function Output tab, enter the name of they filtered entity entity_73000 for the output metric name. Click Create Choose a Metric to Analyze Add the Filter function you can isolate your analysis to an individual entity and metric. Select the metrics to analyze from the filtered entities by adding Filter. While editing your entity type, search the function catalog for Filter function. On the Data tab, click the '+' button and search in the function catalog for Filter . Click Next Choose entity_73000 input item from the previous function as source shown below. On the function Configuration tab, choose ${entity_73000} == True as the expression. On the function Configuration tab, choose travel_time_anomaly as the metric to analyzed for filtered_sources . Click Next On the function Output tab, enter the name of they filtered entity travel_time_anomaly_entity_73000 for the output metric name. Add Anomaly Functions You will add an anomaly function that will provide a score of how likely the single input metric is having anomalies during the specified window. The directions that follow will use the metric travel_time_anomaly which will analyze all robots for that metric. If you only want to analyze one robot entity 73000 , then select entity filtered metric created in the previous step travel_time_anomaly_entity_73000 instead. Search the function catalog for anomaly detection functions to detect anomalies for the metric travel_time_anomaly . On the Data tab, click the '+' button and search in the function catalog for Anomaly . Select K-MeansAnomalyScore . Notice the different kinds of Anomaly Model functions included with Monitor. Click Select button. Select the metric to score for anomalies travel_time_anomaly Anomaly detection functions require a window size which is the number of samples points to evaluate each time the model is scheduled to execute. Enter a windowsize of 12 . Name the calculated metric travel_time_kmeans_score Click Next to configure schedule, look back period and name the alert. Click Auto schedule on button to configure anomaly function scoring schedule. Set the anomaly function to execute every 15 minutes. The function will look for new data for travel_time_anomaly that have been added in the last 15 minutes and calculate alerts for those new data items in the windowsize . Set the look back period to 2 days. This will calculate historical scores looking back 2 days using the new configuration values with the historical metric values for travel_time_anomaly . Set the output metric name for the alert travel_time_kmeans_score Click Create to create the calculated metric. It will take 15 minutes for the calculated metric to update. While waiting lets create anomaly functions for the other anomaly detection functions. See the guidance in the table below for scheduling anomaly functions. Repeat the above steps in this exercise adding, configuring and naming the anomaly scoring models in a similar way for the other models. Use the tool tip suggestions for setting the input arguments default values: Search for FFTbasedGeneralizedAnomalyScore2 in the function catalog. Configure and name it travel_time_fft_score Search for GeneralizedAnomalyScore in the function catalog. Configure and name it travel_time_ga_score Search for SaliencybasedGeneralizedAnomalyScore in the function catalog. Configure and name it travel_time_saliency_score Search for SpectralAnomalyScore in the function catalog. Configure and name it travel_time_spectral_score Table - Suggested Scoring Schedule Data Grain Frequency Sample Window Data Required Schedule Scoring 1 Day 12 24 Days Noncritical \u2013 Once per 12 days Critical - Once per day 1 Hour 12 24 Hours Noncritical \u2013 Once per 12 days Critical - Once per 1 hour 5 Minutes 12 2 Hours Noncritical \u2013 Once per 60 mins Critical - Once per 5 mins 1 Minute 12 1 Hour Noncritical \u2013 Once per 12 mins Critical - Once per 5 mins","title":"Add Anomaly Detection"},{"location":"monitor_anomalies/#add-a-multi-series-line-chart-using-the-ui-widget","text":"From the side menu, click Monitor Search for Your_Initials and click on the asset type you created. Click on robot_daily_summary tab Click on gear icon top right. Choose Edit dashboards Click on Time series line Title: Anomaly Scores for Travel Time Time range: Last 24 hours Choose the following calculated metrics: travel_time_spectral_score, travel_time_saliency_score, travel_time_kmeans_score, travel_time_ga_score, travel_time_fft_score, travel_time_anomaly Click on Settings X-axis-label: Time Y-axis-label: Score Click Add card Save and Close","title":"Add a Multi Series Line Chart using the UI widget"},{"location":"monitor_anomalies/#add-a-multi-series-line-chart-using-json","text":"Add a line chart** to visually compare if high anomaly model scores correlate with the robot travel_time_anomaly metric on each robot instance dashboard. In this exercise you will add a multi series line chart card to your instance dashboard that plots the anomaly model scores for time_travel_anomaly metric. You can then visually correlate which models are effective at detecting anomalies by seeing which model scores are high when the anomalies happen. From the asset dashboard click on the gear icon Select Edit dashboard Add the following line chart card Json for travel_time_anomaly metric anomaly function scores to your asset dashboard. { \"id\": \"card-anomaly-scores-line-timeseries\", \"dataSource\": { \"attributes\": [ { \"attribute\": \"travel_time_anomaly\", \"id\": \"travel_time_anomaly\" }, { \"attribute\": \"travel_time_spectral_score\", \"id\": \"travel_time_spectral_score\" }, { \"attribute\": \"travel_time_saliency_score\", \"id\": \"travel_time_saliency_score\" }, { \"attribute\": \"travel_time_ga_score\", \"id\": \"travel_time_ga_score\" }, { \"attribute\": \"travel_time_fft_score\", \"id\": \"travel_time_fft_score\" }, { \"attribute\": \"travel_time_kmeans_score\", \"id\": \"travel_time_kmeans_score\" } ], \"range\": { \"count\": -24, \"interval\": \"hour\" } }, \"content\": { \"series\": [ { \"dataSourceId\": \"travel_time_anomaly\", \"label\": \"Travel Time Deviation \" },{ \"dataSourceId\": \"travel_time_spectral_score\", \"label\": \"Spectral\" }, { \"dataSourceId\": \"travel_time_saliency_score\", \"label\": \"Saliency\" }, { \"dataSourceId\": \"travel_time_ga_score\", \"label\": \"Generalized\" }, { \"dataSourceId\": \"travel_time_fft_score\", \"label\": \"FFT\" }, { \"dataSourceId\": \"travel_time_kmeans_score\", \"label\": \"Kmeans\" } ], \"xLabel\": \"Time\", \"yLabel\": \"Score\" }, \"size\": \"MEDIUM\", \"title\": \"Anomaly Scores for Travel Time\", \"type\": \"TIMESERIES\" }, 4. View the the anomaly model scores for time_travel_anomaly metric line chart card on each robot asset dashboard. Analyze the anomaly high scores for each model to see which ones happen when the anomaly does for time_travel_anomaly happens. It should look something like the card below 5. In the line chart click Spectral label so that you can see only the line chart of each score versus time_travel_anomaly metric value. 6. Click on Spectral label again to hide that line. Select the Saliency label to see anomaly score line. Notice how the models score higher when there is an anomaly. 7. Study each instance dashboard to see where the anomaly scores are high and time_travel_anomaly metric appears to have an anomaly. Make note of the score levels that correlate with your Robots anomalies that were generated in the travel_time_anomaly metric. You will use this in the next exercise when you create alerts to notify you that anomalies have occurred. The table below has some suggested starting values: Anomaly Score Upper Threshold travel_time_spectral_score 99 travel_time_saliency_score 105 travel_time_ga_score 0.4 travel_time_fft_score 104 travel_time_kmeans_score 8 Add Anomaly Alerts In this exercise you will create alerts for each anomaly function score identified in the previous exercise. You will set the alert thresholds to values of the visually correlated anomaly scores using the upper_threshold values from the table in Add Anomaly Functions As you learned earlier, alerts are a function in the Maximo Asset Monitor catalog that can be configured to notify you that certain asset conditions require attention. There are a several alert functions included in the catalog like Alert High , Alert Low and Alert Expression Filter . Like other functions in the catalog, these alerts can be scheduled to run every five minutes or less frequently. Add a Alert High Value alert for each anomaly model. Alerts can calculate historical values for a given function configuration. Click + button access the Function Catalog. Search on Alert Select the Alert High Value function and then click Select button. Configure the alert to trigger when the value travel_time_spectral_score reaches 99 . An operator would be required to investigate each anomaly alert when they occur. It is important to avoid setting the alert upper_threshold value too high which could cause anomalies to go undetected. Vice versa avoid setting the alert upper_threshold value too low which could cause false alerts. False alerts are those alerts that triggered when there isn't an anomaly. Set input_item to travel_time_spectral_score . Set upper_threshold value to 99 . Set Severity value to High . You can add optionally add separate alerts for Medium and Low thresholds. Set Status value to New . Alerts don't have any order. They can start or finish an in any order. Users can then transition them to New Validated , Acknowleged and finally Resolved . Monitor does not provide a way to force specific state transition paths for alerts. Click Next to configure schedule, look back period and name the alert. Click Auto schedule button to configure schedule. Set the alert to execute every 15 minutes. The alert will look for new data for travel_time_spectral_score that have been added in the last 15 minutes and calculate alerts for those new data items. Leave the look back period set to 1 days. This will calculate alerts looking back 2 days using the historical values for travel_time_spectral_score . Set the output metric name for the alert travel_time_spectral_alert Click Create to create the alert configuration. It will take 15 minutes for the alert to update. While waiting lets create the alerts for the other anomaly model scores. Repeat the above steps in this exercise adding, configuring and naming alerts for each anomaly scoring model using the expression and alert names below. Search Catalog for Model Upper Threshold Output Metric Alert Name SpectralAnomalyScore2 99 travel_time_spectral_alert SaliencybasedGeneralizedAnomalyScore 105 travel_time_saliency_alert GeneralizedAnomalyScore 0.4 travel_time_ga_alert FFTbasedGeneralizedAnomalyScore2 104 travel_time_fft_alert KMeansAnomalyScore 8 travel_time_kmeans_alert Update Functions You can update functions with new a new metric name or configuration value. In this exercise you will review and correct any function names that are improperly spelt. Go to your entity type and click on the Data tab. Expand the Alert (calculated) section of the Data Items to see the alerts. They should look something like the figure below. Check the naming of each alert. If they are misnamed, click on the alert name in Data Items column. On the frame that opens, click the Configure . On the dialog that opens and Next buttons. Change the Output metric name to the correct spelling. Add Alerts to Line Chart In this exercises you will add the travel_time_anomaly alerts to the line card for the travel_time_anomaly on the robots instance dashboard. Start by exporting the robots instance dashboard JSON and adding the alerts additionalData JSON below to the travel_time_anomaly metric line chart so that you can see red dots in the areas where there likely is an anomaly. Edit the robot instance dashboard template JSON. Export and modify the JSON adding the highlighted JSON below in an IDE to the travel_time_anomaly card that you added earlier. , \"additionalData\": { \"type\": \"alert\", \"dataFilter\": { \"name\": [ \"travel_time_spectral_alert\", \"travel_time_saliency_alert\", \"travel_time_ga_alert\", \"travel_time_fft_alert\", \"travel_time_kmeans_alert\" ] } }, The highlighted gray JSON below shows where you should insert the json above. Save the JSON file in the IDE. Import the saved JSON file into the Monitor Instance Dashboard. Save the dashboard. View multiple robot instance dashboards. Analyze the travel_time_anomaly line chart looking for anomalies and alert red dots. When you find one, hoover over it with your mouse cursor. It should look something like the dashboard below","title":"Add a Multi Series Line Chart using JSON"},{"location":"monitor_anomalies/#add-alerts-table-card","text":"","title":"Add Alerts Table Card"},{"location":"monitor_anomalies/#add-alert-table-card-using-the-ui-widget","text":"From the side menu, click Monitor Search for Your_Initials and click on the asset type you created. Click on robot_daily_summary tab Click on gear icon top right. Choose Edit dashboards Click on Alert table Title: Robot alerts from the last 24 hours Time range: Last 24 hours Click Add card Save and Close You should now have the table in your summary dashboard showing the following Anomaly detection functions scoring.","title":"Add Alert Table Card using the UI widget"},{"location":"monitor_anomalies/#add-alert-table-card-using-json","text":"In the previous exercise you visually represented the anomaly alerts as red points on the line chart. It's helpful to also see alerts organized in a table so that you can easily prioritize and act on them. Add a table card that displays the travel_time_anomaly_alerts by robots for the last 24 hours. Add the following card to your instance dashboard template json. { \"id\": \"travel_time_anomaly_alerts\", \"size\": \"XLARGE\", \"title\": \"Robot alerts from the last 24 hours\", \"type\": \"ALERT\", \"dataSource\": { \"range\": { \"count\": -24, \"interval\": \"hour\" }, \"timeGrain\": \"input\", \"type\": \"alert\" } }, You should now have the table in your summary dashboard showing the following Anomaly detection functions scoring. From the calendar control in the top right of the dashboard pick an earlier date to see the historical alerts for the robots on a specific date. Congratulations you have successfully create an asset dashboard and a summary dashboard that aggregates asset performance metrics across multiple assets. You also learned how to detect anomalies by applying anomaly detection functions and alerts at scale across all your enterprise assets.","title":"Add Alert Table Card using JSON"},{"location":"monitor_asset_devices/","text":"Objectives In this Exercise you will learn about: Which data dashboards are automatically created for you How to perform data analysis using the functions catalog How to be alerted about non-conforming asset conditions Troubleshooting functions Before you begin: This Exercise requires that you have completed Exercise 1 Connected Devices View Data Now that you know the data is successfully flowing into the IoT Platform Service, this exercise will let you see which dashboards are automatically created for you. Go to Maximo Asset Monitor page. Click Monitor . Here you can see all of the entity types created from the logical interfaces . An entity is created for each mapped device ID along with it's corresponding properties. Search for your Entity Type <your last name>_thingy Click on <your last name>_thingy row in the table for your entity type Since you only have one device for Thingy Entity Type <your last name>_thingy , only one entity is listed on the Dashboards tab in the Instance Dashboard table on Entities Type page for your Entity Type. As you add more devices to the <your last name>_thingy Device Type in the IoT Platform they will appear on the entities page. Any entity can be an asset, an IO Point, a system of assets or what ever you choose. (Note: You will not see the Hourly summary dash board just yet) Click on the Data Tab and expand Metrics to see all the aggregated metrics across all your devices like the max and min values for time series float data. Scroll down a bit to view the metric charts for co2 , pressure and temperature . Click on co2 to see its max an min over time aggregated across all entities in <your last name>_thingy Entity Type. (Note: you might only see the Metric part now, the other parts will turn up later as you work through the exercises) Click the Dashboards tab to return to see the list of Entities in the Instance Dashboards table. Select your Thingy entity listed in the Instance Dashboards table. Now you only see the data for this specific asset. The Dimensions tab shows the meta data used to classify your asset. (Note: you might only see the Name dimension, but you will learn to add dimensions later) Click Metrics tab to see metrics for the last 24 hours for this entity (asset) only. It may take some time to accrue enough data to visualize, take a break and return after ten or so minutes. Analyze Data In the previous exercise you saw how you can see the raw device data in Monitor Dashboards, in this exercises you will learn how to perform data analysis and transform data so that remote operations managers can take action using intelligent insights. Click Monitor . Here you can see all of the entity types created from the logical interfaces . An entity is created for each mapped device ID along with it's corresponding properties. Search for and click on your Entity Type <your last name>_thingy Click Data tab on the homepage for your Entity Type. You can start tracking the mean of the entities across your Entity Type by creating a calculated metric from the Function Catalogue. Click + button to access the Function Catalog. Search for the Mean function in the catalog. Click on it and click Select . In the next dialog, select the metric that you want to calculate the daily mean for. In this case, temperature and click Next . Since temperature is changing and recorded over time you need to specify what time period the mean is being calculated for. This is called the granularity and you can leave it set to Daily to calculate the daily mean. Replace the calculated Output metric name with your own like Daily_Temperature_Mean Leave everything else as default and click Create to save the metric. This calculated metric is calculating a daily mean. If you wanted to calculate an Hourly_Temperature_Mean , you can set the Granularity to Hourly on the output dialog. You should now see your new calculated metric in the Metric (calculated) list on the left-hand side. If not, then wait 5 minutes and refresh the page. Click the Configure button to update calculated metrics. Click Next and click on the Auto schedule switch to change the schedule of how often the mean is calculated. You can change the frequency of how often daily mean is calculated changing it from every 5 minutes to every hour. You can also change how many days back the mean temperature function should calculate for using historical temperature data. Click Update to save your function configuration changes. Create a new calculated metric that calculates the number of errors every hour. Start by clicking the + button. Find the Sum function in function catalog and click Select . In the following dialog, select the metric err in the source field, leave everything else default and select Next . In the output dialog, you can create a new granularity by clicking the Manage button. In the Create custom grain dialog, name the custom grain Hourly and select Hourly from the Time basis drop down. Leave everything else default and click \u201cCreate.\u201d Name your new calculated metric Hourly_Sum_Errors and click Create . Flip your Nordic Thingy over once in a while to generate errors and after five minutes you should start to see data in the chart. Congratulations. You have learned how to view the metrics of your entities as well as create new calculated metrics from that data. Just like metrics, the calculated metrics are also stored in the data lake. Open and view the DB2 database tables like we did in Exercise 1 (Monitor Page > Usage > Db2 Warehouse on Cloud > Launch > Data > Tables > BLUEADMIN). Once the list of schemas are populated, you'll find that the Analytics Service has created new tables, one for each time grain - search for the name 'DM_ ' and you'll see them all: Click on one of the new tables to view the data. Note: Calculated functions by default are scheduled to run every 5 minutes. Check back later to see if the metric is being calculated. Alerts In this exercise you will learn how to create alerts. Alerts are functions in the Maximo Asset Monitor catalog that can be configured to notify you that certain asset conditions require attention. There are a many types of alert functions included in the catalog like High , Low and Alert Expression Filter . Like other functions in the catalog, these alerts can be scheduled to run every five minutes or less frequently. This is unlike Actions in the IoT Platform Service where notifications are invoked immediately when event data is ingested. Actions have an application programming interface to integrate with other systems. You can also create and register your custom functions in the Maximo Asset Monitor catalog. Both of these are advanced topics that are beyond the scope of this Exercise. You can learn more about how to create custom functions in Maximo Asset Monitor by following this tutorial . Use what you learned in the previous exercise to create a calculated metric named Hourly_Sum_Errors to sum up all the alert errors created by turning your Nordic Thingy up side down using the Sum function in the Catalog. Now you will create an alert to be notified when the hourly sum of errors exceeds 5 using the instructions below. Configure an alert using the value of Hourly_Sum_Errors (calculated metric) created in the previous step. Click + button access the Function Catalog. Search on alert Select the AlertExpression function and then click Select button. Configure the alert to trigger an alert when the value of Hourly_Sum_Errors exceeds 5 errors. It will require investigation of the errors. Monitor uses Python for its expression language using the expression df['metric-name'] Set Alert Expression expression value to df['Hourly_Sum_Errors']>5 Set Alert Expression Severity value to High Set Alert Expression Status value to New . Alerts start in state of New until they are Acknowledged , Validated and finally Resolved or Dismissed . Click the Next button. Name the alert Hourly_Sum_Errors_Alert and click the Create button. The Monitor pipeline runs every 5 minutes. If you have flipped over your Thingy more than five times, you should see the alert show up on the chart in about five minutes. You can also watch all alerts for this entity type by selecting the Alerts tab. Congratulations. You have learned how to create new Alerts from a calculated metric that sums the total number of errors that occur on an asset device. You can also receive alerts on a device event stream topic and take action. That is beyond the scope of these materials. Find out more information on how to configure these actions in the documentation . Troubleshoot Functions Should you see Analysis Stopped warning this means your pipeline for your entity type has stopped calculating your metrics. You should click on Analysis Stopped red dot to view the error details. These warnings often occur because a calculated metric function input argument depends on a metric name that has been deleted or whose name has changed. Click on Search glass icon in the data field to find the metric name that is causing the problem. Make sure it exists or choose the new metric name in the calculated metric that uses it.","title":"2.  Monitor Assets"},{"location":"monitor_asset_devices/#objectives","text":"In this Exercise you will learn about: Which data dashboards are automatically created for you How to perform data analysis using the functions catalog How to be alerted about non-conforming asset conditions Troubleshooting functions Before you begin: This Exercise requires that you have completed Exercise 1 Connected Devices","title":"Objectives"},{"location":"monitor_asset_devices/#view-data","text":"Now that you know the data is successfully flowing into the IoT Platform Service, this exercise will let you see which dashboards are automatically created for you. Go to Maximo Asset Monitor page. Click Monitor . Here you can see all of the entity types created from the logical interfaces . An entity is created for each mapped device ID along with it's corresponding properties. Search for your Entity Type <your last name>_thingy Click on <your last name>_thingy row in the table for your entity type Since you only have one device for Thingy Entity Type <your last name>_thingy , only one entity is listed on the Dashboards tab in the Instance Dashboard table on Entities Type page for your Entity Type. As you add more devices to the <your last name>_thingy Device Type in the IoT Platform they will appear on the entities page. Any entity can be an asset, an IO Point, a system of assets or what ever you choose. (Note: You will not see the Hourly summary dash board just yet) Click on the Data Tab and expand Metrics to see all the aggregated metrics across all your devices like the max and min values for time series float data. Scroll down a bit to view the metric charts for co2 , pressure and temperature . Click on co2 to see its max an min over time aggregated across all entities in <your last name>_thingy Entity Type. (Note: you might only see the Metric part now, the other parts will turn up later as you work through the exercises) Click the Dashboards tab to return to see the list of Entities in the Instance Dashboards table. Select your Thingy entity listed in the Instance Dashboards table. Now you only see the data for this specific asset. The Dimensions tab shows the meta data used to classify your asset. (Note: you might only see the Name dimension, but you will learn to add dimensions later) Click Metrics tab to see metrics for the last 24 hours for this entity (asset) only. It may take some time to accrue enough data to visualize, take a break and return after ten or so minutes.","title":"View Data"},{"location":"monitor_asset_devices/#analyze-data","text":"In the previous exercise you saw how you can see the raw device data in Monitor Dashboards, in this exercises you will learn how to perform data analysis and transform data so that remote operations managers can take action using intelligent insights. Click Monitor . Here you can see all of the entity types created from the logical interfaces . An entity is created for each mapped device ID along with it's corresponding properties. Search for and click on your Entity Type <your last name>_thingy Click Data tab on the homepage for your Entity Type. You can start tracking the mean of the entities across your Entity Type by creating a calculated metric from the Function Catalogue. Click + button to access the Function Catalog. Search for the Mean function in the catalog. Click on it and click Select . In the next dialog, select the metric that you want to calculate the daily mean for. In this case, temperature and click Next . Since temperature is changing and recorded over time you need to specify what time period the mean is being calculated for. This is called the granularity and you can leave it set to Daily to calculate the daily mean. Replace the calculated Output metric name with your own like Daily_Temperature_Mean Leave everything else as default and click Create to save the metric. This calculated metric is calculating a daily mean. If you wanted to calculate an Hourly_Temperature_Mean , you can set the Granularity to Hourly on the output dialog. You should now see your new calculated metric in the Metric (calculated) list on the left-hand side. If not, then wait 5 minutes and refresh the page. Click the Configure button to update calculated metrics. Click Next and click on the Auto schedule switch to change the schedule of how often the mean is calculated. You can change the frequency of how often daily mean is calculated changing it from every 5 minutes to every hour. You can also change how many days back the mean temperature function should calculate for using historical temperature data. Click Update to save your function configuration changes. Create a new calculated metric that calculates the number of errors every hour. Start by clicking the + button. Find the Sum function in function catalog and click Select . In the following dialog, select the metric err in the source field, leave everything else default and select Next . In the output dialog, you can create a new granularity by clicking the Manage button. In the Create custom grain dialog, name the custom grain Hourly and select Hourly from the Time basis drop down. Leave everything else default and click \u201cCreate.\u201d Name your new calculated metric Hourly_Sum_Errors and click Create . Flip your Nordic Thingy over once in a while to generate errors and after five minutes you should start to see data in the chart. Congratulations. You have learned how to view the metrics of your entities as well as create new calculated metrics from that data. Just like metrics, the calculated metrics are also stored in the data lake. Open and view the DB2 database tables like we did in Exercise 1 (Monitor Page > Usage > Db2 Warehouse on Cloud > Launch > Data > Tables > BLUEADMIN). Once the list of schemas are populated, you'll find that the Analytics Service has created new tables, one for each time grain - search for the name 'DM_ ' and you'll see them all: Click on one of the new tables to view the data. Note: Calculated functions by default are scheduled to run every 5 minutes. Check back later to see if the metric is being calculated.","title":"Analyze Data"},{"location":"monitor_asset_devices/#alerts","text":"In this exercise you will learn how to create alerts. Alerts are functions in the Maximo Asset Monitor catalog that can be configured to notify you that certain asset conditions require attention. There are a many types of alert functions included in the catalog like High , Low and Alert Expression Filter . Like other functions in the catalog, these alerts can be scheduled to run every five minutes or less frequently. This is unlike Actions in the IoT Platform Service where notifications are invoked immediately when event data is ingested. Actions have an application programming interface to integrate with other systems. You can also create and register your custom functions in the Maximo Asset Monitor catalog. Both of these are advanced topics that are beyond the scope of this Exercise. You can learn more about how to create custom functions in Maximo Asset Monitor by following this tutorial . Use what you learned in the previous exercise to create a calculated metric named Hourly_Sum_Errors to sum up all the alert errors created by turning your Nordic Thingy up side down using the Sum function in the Catalog. Now you will create an alert to be notified when the hourly sum of errors exceeds 5 using the instructions below. Configure an alert using the value of Hourly_Sum_Errors (calculated metric) created in the previous step. Click + button access the Function Catalog. Search on alert Select the AlertExpression function and then click Select button. Configure the alert to trigger an alert when the value of Hourly_Sum_Errors exceeds 5 errors. It will require investigation of the errors. Monitor uses Python for its expression language using the expression df['metric-name'] Set Alert Expression expression value to df['Hourly_Sum_Errors']>5 Set Alert Expression Severity value to High Set Alert Expression Status value to New . Alerts start in state of New until they are Acknowledged , Validated and finally Resolved or Dismissed . Click the Next button. Name the alert Hourly_Sum_Errors_Alert and click the Create button. The Monitor pipeline runs every 5 minutes. If you have flipped over your Thingy more than five times, you should see the alert show up on the chart in about five minutes. You can also watch all alerts for this entity type by selecting the Alerts tab. Congratulations. You have learned how to create new Alerts from a calculated metric that sums the total number of errors that occur on an asset device. You can also receive alerts on a device event stream topic and take action. That is beyond the scope of these materials. Find out more information on how to configure these actions in the documentation .","title":"Alerts"},{"location":"monitor_asset_devices/#troubleshoot-functions","text":"Should you see Analysis Stopped warning this means your pipeline for your entity type has stopped calculating your metrics. You should click on Analysis Stopped red dot to view the error details. These warnings often occur because a calculated metric function input argument depends on a metric name that has been deleted or whose name has changed. Click on Search glass icon in the data field to find the metric name that is causing the problem. Make sure it exists or choose the new metric name in the calculated metric that uses it.","title":"Troubleshoot Functions"},{"location":"release_notes/","text":"Contributors to the IBM Maximo Asset Monitor Labs Carlos Ferreira - carlos.ferreira1@ibm.com Paulina Thomas - Paulina.Thomas@ibm.com Nirel Cortes - nirel.cortes@ibm.com Eric Lowry - elowry@us.ibm.com Graeme Pexton - jgpexton@us.ibm.com Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Mike Lamb - mllamb@us.ibm.com Change Information Date By Description 2024-01-02 Jan Ekstr\u00f8m Restructured to work on Github Pages. 2021-02-12 Jan Ekstr\u00f8m Correction of a screen shot in the Connect Devices exercise. 2021-01-29 Mike Lamb Added dashboard UI widget sections. 2021-01-05 Jan Ekstr\u00f8m Added the missing JSON files for Monitor Anomalies. 2021-01-04 Jan Ekstr\u00f8m Merged contributors into one about section and added change information as well. Added Last Update at the end of the Index file. 2020-12-30 Jan Ekstr\u00f8m Migrated original site to toplevel and created the new structure for the IBM Maximo Labs 2020-12-07 Jan Ekstr\u00f8m Updated Monitor Asset Devices with new screen shots and content. 2020-11-27 Jan Ekstr\u00f8m Updated Index, Pre-reqs and Connect Devices with new screen shots and content. 2020-10-29 Carlos Ferreira Fixed references to labs. 2020-10-22 Carlos Ferreira Moved content for Monitor into its own doc folder. 2020-??-?? Carlos Ferreira Created this MkDocs site to hold the Monitor Hands-on Labs based on Word documents. This process was supported by the help from the contributers mentioned above.","title":"Release Notes"},{"location":"release_notes/#contributors-to-the-ibm-maximo-asset-monitor-labs","text":"Carlos Ferreira - carlos.ferreira1@ibm.com Paulina Thomas - Paulina.Thomas@ibm.com Nirel Cortes - nirel.cortes@ibm.com Eric Lowry - elowry@us.ibm.com Graeme Pexton - jgpexton@us.ibm.com Jan Ekstr\u00f8m - jan.ekstrom@dk.ibm.com Mike Lamb - mllamb@us.ibm.com","title":"Contributors to the IBM Maximo Asset Monitor Labs"},{"location":"release_notes/#change-information","text":"Date By Description 2024-01-02 Jan Ekstr\u00f8m Restructured to work on Github Pages. 2021-02-12 Jan Ekstr\u00f8m Correction of a screen shot in the Connect Devices exercise. 2021-01-29 Mike Lamb Added dashboard UI widget sections. 2021-01-05 Jan Ekstr\u00f8m Added the missing JSON files for Monitor Anomalies. 2021-01-04 Jan Ekstr\u00f8m Merged contributors into one about section and added change information as well. Added Last Update at the end of the Index file. 2020-12-30 Jan Ekstr\u00f8m Migrated original site to toplevel and created the new structure for the IBM Maximo Labs 2020-12-07 Jan Ekstr\u00f8m Updated Monitor Asset Devices with new screen shots and content. 2020-11-27 Jan Ekstr\u00f8m Updated Index, Pre-reqs and Connect Devices with new screen shots and content. 2020-10-29 Carlos Ferreira Fixed references to labs. 2020-10-22 Carlos Ferreira Moved content for Monitor into its own doc folder. 2020-??-?? Carlos Ferreira Created this MkDocs site to hold the Monitor Hands-on Labs based on Word documents. This process was supported by the help from the contributers mentioned above.","title":"Change Information"},{"location":"service_request/","text":"You should now have a good understanding of how alerts happen in Maximo Asset Monitor. Now you will learn how to create acknowledge alert and create service requests to further investigate and resolve alerts in Maximo. In this Exercise you will: Create a Maximo Service Connection so that Monitor knows which Maximo service to open service requests in. Acknowledge an Alert and create Service Request in Maximo so that the alert can be investigated and resolved. Resolve Service Request in Maximo. Resolve Alerts in Monitor. You can create service request in IBM Maximo Enterprise Asset Management Service from an alert in Maximo Asset Monitor. In Maximo, a service request indicates that an asset or location in your enterprise needs some sort of attention. Once a service request has been created, there is a ticket associated with that request. If the service request has been validated and the asset requires a particular task, you can assign the service request a work order to specify the Exerciseor, materials, services, and tools to complete the particular task. In this Exercise exercise, you will learn how to connect a Maximo service to your Maximo Asset Monitor instance, create a service request, and assign that service request a work order. Create Maximo Service Connection After logging into Maximo Asset Monitor, open up the hamburger menu and click on Services. Once you reach the services page, click on the Add Service button. The page pictured below will pop up. In the Service Name field, name your Maximo service something easily identifiable. In the drop-down menu titled Service Type , choose Maximo. You will also need the host URL, the username, and the password you use to login to your Maximo service. If you do not have this information, contact your system administrator. In the Site dimension and Asset dimension fields, use the prepopulated values SITEID and ASSETID , respectively. Next, click Save Changes . Your Maximo service should pop up underneath the title Other Services on the Services page. Create Service Request from an Alert In this section, you will need to have some alerts that have already been triggered for your Entity Type. If you have not yet learned how to create an alert in Monitor, please see the Alerts section in Exercise 2: Monitor Assets. You will also need to have an asset/assets with the same name as your entity/entities already set up in your Maximo service. If you do not know how to create an asset in Maximo, please see Appendix 1: Creating an Asset in Maximo. Select Monitor from the hamburger menu and go to your Entity Type. You are able to access a list of your alerts from your Entity Type homepage two different ways: You can see all of your alerts in a list on the Alerts tab of your Entity Type homepage. If you want to see all of your alert types together, choose this route to see your alerts. You can also go to the Data tab of your homepage, click on the carrot next to Alerts to see a list of your individual alerts. Click on one of your listed alerts. If you would rather see your alerts separated by alert type, choose this route to see your alerts. Choose an alert for which you would like to create a service request and assign yourself the owner. To assign yourself the owner, you will click the carrot next to Select owner and select yourself. Next, click the Create service request button on the row corresponding to the alert you have selected. The window shown below will pop up. Select the Maximo service you named in step three of the previous section from the dropdown menu titled Maximo service . Make sure the Asset number matches the asset name you created in Maximo. (It does not necessarily have to be a number like the name suggests.) In the Site field, enter the SITE corresponding with your asset in Maximo. If you would like to change the description or details, you are welcome to. Instead, use the prepopulated options. Finally, click Create . You will now see that a number has replaced the Create service request button. If you click on that number you will be directed to the service request you just created. You may be prompted to log in to your Maximo service. Use the username and password you were given by your system administrator. Escalate Service Request to a Work Order\" Escalate Service Request to Work Order. Inside of the page for the Service Request you just created, you will see on the left side there is a list menu. Find Create . Hover over Create and click on Work Order . Select the repair facility of your choice when prompted and click OK . You have created a Work Order! On the top of the Service Request window, click Related Records . The Work Order you just created will be on this page. Resolve Alert Go back to your Alert page in your Entity type and find the alert for which you made the service request and work order. Click on the drop down menu selected in the picture below. The menu should currently read New . Change New to Resolved . Congratulations! You have successfully connected a Maximo service to Maximo Asset Monitor, created a Service Request in Maximo, assigned that service request to a Work Order, and finally resolved the alert in Monitor.","title":"4.  Create Service Requests"},{"location":"service_request/#create-maximo-service-connection","text":"After logging into Maximo Asset Monitor, open up the hamburger menu and click on Services. Once you reach the services page, click on the Add Service button. The page pictured below will pop up. In the Service Name field, name your Maximo service something easily identifiable. In the drop-down menu titled Service Type , choose Maximo. You will also need the host URL, the username, and the password you use to login to your Maximo service. If you do not have this information, contact your system administrator. In the Site dimension and Asset dimension fields, use the prepopulated values SITEID and ASSETID , respectively. Next, click Save Changes . Your Maximo service should pop up underneath the title Other Services on the Services page.","title":"Create Maximo Service Connection"},{"location":"service_request/#create-service-request-from-an-alert","text":"In this section, you will need to have some alerts that have already been triggered for your Entity Type. If you have not yet learned how to create an alert in Monitor, please see the Alerts section in Exercise 2: Monitor Assets. You will also need to have an asset/assets with the same name as your entity/entities already set up in your Maximo service. If you do not know how to create an asset in Maximo, please see Appendix 1: Creating an Asset in Maximo. Select Monitor from the hamburger menu and go to your Entity Type. You are able to access a list of your alerts from your Entity Type homepage two different ways: You can see all of your alerts in a list on the Alerts tab of your Entity Type homepage. If you want to see all of your alert types together, choose this route to see your alerts. You can also go to the Data tab of your homepage, click on the carrot next to Alerts to see a list of your individual alerts. Click on one of your listed alerts. If you would rather see your alerts separated by alert type, choose this route to see your alerts. Choose an alert for which you would like to create a service request and assign yourself the owner. To assign yourself the owner, you will click the carrot next to Select owner and select yourself. Next, click the Create service request button on the row corresponding to the alert you have selected. The window shown below will pop up. Select the Maximo service you named in step three of the previous section from the dropdown menu titled Maximo service . Make sure the Asset number matches the asset name you created in Maximo. (It does not necessarily have to be a number like the name suggests.) In the Site field, enter the SITE corresponding with your asset in Maximo. If you would like to change the description or details, you are welcome to. Instead, use the prepopulated options. Finally, click Create . You will now see that a number has replaced the Create service request button. If you click on that number you will be directed to the service request you just created. You may be prompted to log in to your Maximo service. Use the username and password you were given by your system administrator.","title":"Create Service Request from an Alert"},{"location":"service_request/#escalate-service-request-to-a-work-order","text":"Escalate Service Request to Work Order. Inside of the page for the Service Request you just created, you will see on the left side there is a list menu. Find Create . Hover over Create and click on Work Order . Select the repair facility of your choice when prompted and click OK . You have created a Work Order! On the top of the Service Request window, click Related Records . The Work Order you just created will be on this page.","title":"Escalate Service Request to a Work Order\""},{"location":"service_request/#resolve-alert","text":"Go back to your Alert page in your Entity type and find the alert for which you made the service request and work order. Click on the drop down menu selected in the picture below. The menu should currently read New . Change New to Resolved . Congratulations! You have successfully connected a Maximo service to Maximo Asset Monitor, created a Service Request in Maximo, assigned that service request to a Work Order, and finally resolved the alert in Monitor.","title":"Resolve Alert"}]}